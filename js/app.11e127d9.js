(function(t) {
    function e(e) {
        for (var a, i, s = e[0], u = e[1], l = e[2], p = 0, d = []; p < s.length; p++) i = s[p], Object.prototype.hasOwnProperty.call(o, i) && o[i] && d.push(o[i][0]), o[i] = 0;
        for (a in u) Object.prototype.hasOwnProperty.call(u, a) && (t[a] = u[a]);
        c && c(e);
        while (d.length) d.shift()();
        return r.push.apply(r, l || []), n()
    }

    function n() {
        for (var t, e = 0; e < r.length; e++) {
            for (var n = r[e], a = !0, i = 1; i < n.length; i++) {
                var s = n[i];
                0 !== o[s] && (a = !1)
            }
            a && (r.splice(e--, 1), t = u(u.s = n[0]))
        }
        return t
    }
    var a = {},
        i = { 14: 0 },
        o = { 14: 0 },
        r = [];

    function s(t) { return u.p + "js/" + ({ 1: "chunk-common" }[t] || t) + "." + { 1: "1331d76e", 2: "94855101", 3: "d84f068f", 4: "0dda196f", 5: "2f251471", 6: "99f84071", 7: "8a90ed4a", 8: "2a3afec3", 9: "9695c100", 10: "fb8d4b2d", 11: "74ac1fcc", 12: "6cd1563b", 13: "658be287", 15: "0cb78cd2", 16: "53cc56ed", 17: "236518e9", 18: "9160bbbb", 19: "ac4618b5", 20: "d99edcbb", 21: "8093ea24", 22: "91861d79", 23: "8d0743bf", 24: "1350bab6", 25: "a9a3a6a5", 26: "5ed6edb6", 27: "90230d50", 28: "c6465bbc", 29: "435661eb", 30: "972e0fe4", 31: "ae8772db" }[t] + ".js" }

    function u(e) { if (a[e]) return a[e].exports; var n = a[e] = { i: e, l: !1, exports: {} }; return t[e].call(n.exports, n, n.exports, u), n.l = !0, n.exports }
    u.e = function(t) {
        var e = [],
            n = { 1: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1 };
        i[t] ? e.push(i[t]) : 0 !== i[t] && n[t] && e.push(i[t] = new Promise((function(e, n) {
            for (var a = "css/" + ({ 1: "chunk-common" }[t] || t) + "." + { 1: "609e838e", 2: "31d6cfe0", 3: "31d6cfe0", 4: "31d6cfe0", 5: "31d6cfe0", 6: "31d6cfe0", 7: "31d6cfe0", 8: "31d6cfe0", 9: "31d6cfe0", 10: "31d6cfe0", 11: "31d6cfe0", 12: "31d6cfe0", 13: "31d6cfe0", 15: "602e0111", 16: "fe6a2678", 17: "c0d2ca50", 18: "f3d30c87", 19: "a6fd2d0c", 20: "19c91c4d", 21: "ce965163", 22: "31d6cfe0", 23: "31d6cfe0", 24: "31d6cfe0", 25: "31d6cfe0", 26: "31d6cfe0", 27: "31d6cfe0", 28: "31d6cfe0", 29: "31d6cfe0", 30: "31d6cfe0", 31: "31d6cfe0" }[t] + ".css", o = u.p + a, r = document.getElementsByTagName("link"), s = 0; s < r.length; s++) {
                var l = r[s],
                    p = l.getAttribute("data-href") || l.getAttribute("href");
                if ("stylesheet" === l.rel && (p === a || p === o)) return e()
            }
            var d = document.getElementsByTagName("style");
            for (s = 0; s < d.length; s++) { l = d[s], p = l.getAttribute("data-href"); if (p === a || p === o) return e() }
            var c = document.createElement("link");
            c.rel = "stylesheet", c.type = "text/css", c.onload = e, c.onerror = function(e) {
                var a = e && e.target && e.target.src || o,
                    r = new Error("Loading CSS chunk " + t + " failed.\n(" + a + ")");
                r.code = "CSS_CHUNK_LOAD_FAILED", r.request = a, delete i[t], c.parentNode.removeChild(c), n(r)
            }, c.href = o;
            var m = document.getElementsByTagName("head")[0];
            m.appendChild(c)
        })).then((function() { i[t] = 0 })));
        var a = o[t];
        if (0 !== a)
            if (a) e.push(a[2]);
            else {
                var r = new Promise((function(e, n) { a = o[t] = [e, n] }));
                e.push(a[2] = r);
                var l, p = document.createElement("script");
                p.charset = "utf-8", p.timeout = 120, u.nc && p.setAttribute("nonce", u.nc), p.src = s(t);
                var d = new Error;
                l = function(e) {
                    p.onerror = p.onload = null, clearTimeout(c);
                    var n = o[t];
                    if (0 !== n) {
                        if (n) {
                            var a = e && ("load" === e.type ? "missing" : e.type),
                                i = e && e.target && e.target.src;
                            d.message = "Loading chunk " + t + " failed.\n(" + a + ": " + i + ")", d.name = "ChunkLoadError", d.type = a, d.request = i, n[1](d)
                        }
                        o[t] = void 0
                    }
                };
                var c = setTimeout((function() { l({ type: "timeout", target: p }) }), 12e4);
                p.onerror = p.onload = l, document.head.appendChild(p)
            }
        return Promise.all(e)
    }, u.m = t, u.c = a, u.d = function(t, e, n) { u.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n }) }, u.r = function(t) { "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, u.t = function(t, e) {
        if (1 & e && (t = u(t)), 8 & e) return t;
        if (4 & e && "object" === typeof t && t && t.__esModule) return t;
        var n = Object.create(null);
        if (u.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t)
            for (var a in t) u.d(n, a, function(e) { return t[e] }.bind(null, a));
        return n
    }, u.n = function(t) { var e = t && t.__esModule ? function() { return t["default"] } : function() { return t }; return u.d(e, "a", e), e }, u.o = function(t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, u.p = "/", u.oe = function(t) { throw console.error(t), t };
    var l = window["webpackJsonp"] = window["webpackJsonp"] || [],
        p = l.push.bind(l);
    l.push = e, l = l.slice();
    for (var d = 0; d < l.length; d++) e(l[d]);
    var c = p;
    r.push([0, 0]), n()
})({
    0: function(t, e, n) { t.exports = n("2f39") },
    "0045": function(t) { t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getBondCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"name":"getBondsSlice","outputs":[{"components":[{"internalType":"uint256","name":"bondedAt","type":"uint256"},{"internalType":"uint256","name":"bondedQty","type":"uint256"},{"internalType":"uint256","name":"discountRateNumerator","type":"uint256"},{"internalType":"uint256","name":"exchangeRate","type":"uint256"},{"internalType":"uint256","name":"vestingPeriod","type":"uint256"},{"internalType":"uint256","name":"vestingAmount","type":"uint256"},{"internalType":"bool","name":"isWithdrawn","type":"bool"}],"internalType":"struct TestContract2.Deposit[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getRewardPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getVestingAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]') },
    "0047": function(t, e, n) {},
    "0af5": function(t) { t.exports = JSON.parse('[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"}]') },
    1: function(t, e) {},
    10: function(t, e) {},
    11: function(t, e) {},
    12: function(t, e) {},
    "12cb": function(t, e, n) {
        "use strict";
        n.r(e);
        var a = n("923f");
        e["default"] = { en: a["default"] }
    },
    13: function(t, e) {},
    14: function(t, e) {},
    15: function(t, e) {},
    16: function(t, e) {},
    17: function(t, e) {},
    2: function(t, e) {},
    "2f39": function(t, e, n) {
        "use strict";
        n.r(e);
        var a = {};
        n.r(a), n.d(a, "getAccount", (function() { return I })), n.d(a, "isLogon", (function() { return O }));
        var i = {};
        n.r(i), n.d(i, "set_login", (function() { return S })), n.d(i, "set_logout", (function() { return _ }));
        var o = {};
        n.r(o), n.d(o, "connect", (function() { return N })), n.d(o, "disconnect", (function() { return Y })), n.d(o, "fetchAirdrop", (function() { return q })), n.d(o, "claimAirdrop", (function() { return W }));
        var r = {};
        n.r(r), n.d(r, "set_tokenInfo", (function() { return J })), n.d(r, "set_tokens", (function() { return z })), n.d(r, "set_networks", (function() { return X })), n.d(r, "set_buyBacks", (function() { return Z })), n.d(r, "set_transactionChannel", (function() { return tt })), n.d(r, "set_bankInfo", (function() { return et })), n.d(r, "set_compoundList", (function() { return nt })), n.d(r, "set_youtubePlaylist", (function() { return at })), n.d(r, "set_multiChainFarming", (function() { return it })), n.d(r, "set_multichainList", (function() { return ot })), n.d(r, "set_chainFarmingInfo", (function() { return rt })), n.d(r, "set_FEFEStats", (function() { return st })), n.d(r, "set_gitbookPromotion", (function() { return ut })), n.d(r, "set_gitbookStaking", (function() { return lt }));
        var s = {};
        n.r(s), n.d(s, "calculateUserInfo", (function() { return mt })), n.d(s, "fetchUserTokenInfo", (function() { return yt })), n.d(s, "fetchUserBankInfo", (function() { return bt })), n.d(s, "fetchTrackerInfo", (function() { return ft })), n.d(s, "fetchAllData", (function() { return ht })), n.d(s, "fetchBuybacks", (function() { return gt })), n.d(s, "fetchTransactionChannel", (function() { return wt })), n.d(s, "approveToken", (function() { return kt })), n.d(s, "writeBankContract", (function() { return Tt })), n.d(s, "getBlockTime", (function() { return Bt })), n.d(s, "fetchYoutubePlaylist", (function() { return vt })), n.d(s, "fetchMultiChainFarming", (function() { return Et })), n.d(s, "fetchMultichainList", (function() { return Lt })), n.d(s, "fetchChainFarmingInfo", (function() { return Rt })), n.d(s, "fetchFEFEStats", (function() { return It })), n.d(s, "fetchgitbookPromotion", (function() { return Ot })), n.d(s, "fetchgitbookStaking", (function() { return St }));
        var u = {};
        n.r(u), n.d(u, "getBondItem", (function() { return Mt })), n.d(u, "getBondItems", (function() { return Ct })), n.d(u, "getBondInfo", (function() { return xt })), n.d(u, "getBondList", (function() { return Pt }));
        var l = {};
        n.r(l), n.d(l, "set_bondList", (function() { return $t })), n.d(l, "set_bondItems", (function() { return Ut }));
        var p = {};
        n.r(p), n.d(p, "_fetchBondPage", (function() { return Nt })), n.d(p, "_fetchTokenBalanceWithAllowance", (function() { return Yt })), n.d(p, "fetchUserBondInfo", (function() { return qt })), n.d(p, "fetchBondData", (function() { return Wt })), n.d(p, "writeBondContract", (function() { return Ht })), n.d(p, "fetchBondEstimate", (function() { return Vt }));
        n("5319"), n("7d6e"), n("e54f"), n("c382"), n("4848"), n("985d"), n("0047");
        var d = n("2b0e"),
            c = n("1f91"),
            m = n("42d2"),
            y = n("b05d"),
            b = n("515f"),
            f = n("9c64"),
            h = n("2a19");
        d["a"].use(y["a"], { config: { dark: !0, notify: { color: "negative", badgeColor: "indigo-8", badgeTextColor: "white", timeout: 1e4, html: !0, classes: "text-body1", position: "bottom-right" } }, lang: c["a"], iconSet: m["a"], plugins: { Cookies: b["a"], Meta: f["a"], Notify: h["a"] } });
        var g = function() {
                var t = this,
                    e = t.$createElement,
                    n = t._self._c || e;
                return n("div", { attrs: { id: "q-app" } }, [n("router-view")], 1)
            },
            w = [],
            k = { name: "App" },
            T = k,
            B = n("2877"),
            v = Object(B["a"])(T, g, w, !1, null, null, null),
            E = v.exports,
            L = n("2f62"),
            R = function() { return { address: "" } };

        function I(t) { return t.address }

        function O(t) { return "" !== t.address }

        function S(t, e) { t.address = e }

        function _(t) { t.address = "" }
        var A = n("99e5"),
            M = n.n(A),
            C = n("c030"),
            x = n("a807");
        const P = () => {
            if (!window.ReadProvider) {
                let t = new M.a.providers.HttpProvider(d["a"].prototype.getRPCUrl(), { timeout: 1e4 });
                window.ReadProvider = new M.a(t)
            }
            return window.ReadProvider
        };

        function D({ address: t, abi: e }) { let n = P(); return new n.eth.Contract(e, t) }

        function F({ address: t, abi: e }) { if (window.Blockchain) { let n = new M.a(window.Blockchain); return new n.eth.Contract(e, t) } }
        async function $(t, e) {
            let n = D(d["a"].prototype.$contracts.multiCall),
                a = new x["b"](t);
            const i = e.map((t => [t.address.toLowerCase(), a.encodeFunctionData(t.name, t.params)])),
                { returnData: o } = await n.methods["aggregate"](i).call();
            return o.map(((t, n) => a.decodeFunctionResult(e[n].name, t)))
        }
        async function U() { let t = P(); return await t.eth.getBlock("latest") }
        async function N({ commit: t, dispatch: e }, n) {
            window.Provider = n, window.Blockchain = new M.a(n);
            let a = await window.Blockchain.eth.getAccounts(),
                i = await window.Blockchain.eth.getChainId();
            if (i === parseInt(56)) t("set_login", a[0]), e("farm/fetchAllData", a[0], { root: !0 }), dataLayer && dataLayer.push({ event: "Connect_wallet_success" });
            else try {
                let t = d["a"].prototype.$networkItems.find((t => t.chainId === parseInt(56))),
                    { chainName: e, chainId: n, rpcUrls: a, iconUrls: i, nativeCurrency: o, blockExplorerUrls: r } = t;
                await window.ethereum.request({ method: "wallet_addEthereumChain", params: [{ chainId: M.a.utils.toHex(n), chainName: e, rpcUrls: a, iconUrls: i, nativeCurrency: o, blockExplorerUrls: r }] })
            } catch (o) { h["a"].create({ message: "Please switch to BSC-MAINNET Network", color: "orange" }) }
            n.on("chainChanged", (n => { parseInt(n.toString()) === parseInt(56) ? (t("set_login", a[0]), e("farm/fetchAllData", a[0], { root: !0 })) : h["a"].create({ message: "Please switch to BSC-MAINNET Network", color: "orange" }) })), n.on("accountsChanged", (n => { t("set_login", n[0]), e("farm/fetchAllData", n[0], { root: !0 }), dataLayer && dataLayer.push({ event: "Connect_wallet_success" }) }))
        }
        async function Y({ commit: t }) { t("set_logout"), window.Provider && (window.Provider.close && await window.Provider.close(), window.Provider.clearCachedProvider && window.Provider.clearCachedProvider(), localStorage.removeItem("WEB3_CONNECT_CACHED_PROVIDER"), window.Provider = null) }
        async function q({ commit: t }, e) {
            try {
                let t = {};
                if (e) {
                    let n = [{ address: d["a"].prototype.$contracts.airDrop.address, name: "isWhitelistEnable", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "isWhitelistStarted", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "rewardAmount", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "isPaused", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "isClaimed", params: [e] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "isWhitelisted", params: [e] }];
                    t = await $(d["a"].prototype.$contracts.airDrop.abi, n).then((t => {
                        let e = t[0][0],
                            n = t[1][0],
                            a = C["a"].utils.formatEther(t[2][0].toString()),
                            i = t[3][0],
                            o = t[4][0],
                            r = t[5][0];
                        return { isWhitelistEnable: e, isWhitelistStarted: n, rewardAmount: a, isPaused: i, isClaimed: o, isWhitelisted: r }
                    }))
                } else {
                    let e = [{ address: d["a"].prototype.$contracts.airDrop.address, name: "isWhitelistEnable", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "isWhitelistStarted", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "rewardAmount", params: [] }, { address: d["a"].prototype.$contracts.airDrop.address, name: "isPaused", params: [] }];
                    t = await $(d["a"].prototype.$contracts.airDrop.abi, e).then((t => {
                        let e = t[0][0],
                            n = t[1][0],
                            a = C["a"].utils.formatEther(t[2][0].toString()),
                            i = t[3][0];
                        return { isWhitelistEnable: e, isWhitelistStarted: n, rewardAmount: a, isPaused: i }
                    }))
                }
                let n = [{ address: d["a"].prototype.$contracts.mainToken.address, name: "balanceOf", params: [d["a"].prototype.$contracts.airDrop.address] }];
                return await $(d["a"].prototype.$contracts.pancakePair.abi, n).then((e => { t.available = C["a"].utils.formatEther(e[0][0].toString()) })), t
            } catch (n) { console.log("fetchAirdrop->Error", n) }
        }
        async function W({ commit: t }, e) { try { if (e) { let t = F(d["a"].prototype.$contracts.airDrop); return t.methods.claim().send({ from: e }) } return Promise.reject("Please connect wallet") } catch (n) { throw console.log("claimAirdrop->Error", n), n } }
        var H = { namespaced: !0, getters: a, mutations: i, actions: o, state: R },
            V = function() { return { tokenInfo: { burnRate: "", marketCap: 0, circulatingSupply: "", backedLiquidityTreasury: 0, backedLiquidityRFV: 0, nextRebase: "", averageHolding: 0, riskFreeValueBalance: "", riskFreeValueBalanceFiat: "", farmingProfitFiat: "", treasuryBalance: "", treasuryBalanceFiat: "", liquidityBalance: "", liquidityBalanceFiat: "", totalBurned: "", totalBurnedFiat: "", nextBurnAmount: "", nextBurnAmountFiat: "", nextBurnDate: "", maxSellAmount: "", totalBusdRewarded: "", price: "", apy: 158893.59, aprDaily: 2.02, allTimeHigh: "", totalVolume: "", priceChangePercent: "", totalHolder: "", balance: "", balanceFiat: "", dailyEarn: "", dailyEarnFiat: "", nextReward: "", nextRewardFiat: "", nextRewardYield: "", monthROI: "", monthROIFiat: "", bankAllowance: "" }, tokens: [], networks: [], buybacks: [], transactionchannel: [], bankInfo: { referralLiberoPercents: [], referralBusdPercents: [], earlyWithdrawPenaltyRate: "", rewardRatio: "", maxLockedAmount: "", minLockedAmount: "", totalSupply: "", totalWithdrawn: "", totalDeposited: "", totalBusdReferral: "", totalLiberoReferral: "", totalRebaseWithdrawn: "", averageLockTime: "", busdAprDay: "", busdApr: "", liberoAprDay: "", liberoApy: "", referrer: "", lockedAmount: "", lockEnd: "", lockMinted: "", liberoBonus: "", liberoBonusFiat: "", busdBonus: "", totalLiberoBonus: 0, totalLiberoBonusFiat: 0, totalBusdBonus: "", referralByLevel: [], totalLiberoReward: "", totalBusdReward: "", busdAirdropCount: "", busdAirdropTime: 0, busdAirdropAmount: "", pendingLiberoReward: "", userLiberoReward: "", pendingBusdReward: "", userBusdReward: "", sharePercent: "", pendingLiberoRewardFiat: "", totalUserLiberoReward: "", totalUserLiberoRewardFiat: "", totalUserBusdReward: "" }, compoundList: [], youtubeplaylist: [], multiChainFarming: { FarmingTo: "", FarmingFrom: "", Holders: "", Price: "", Volume_24h: "", AllTimeHigh: "", LastUpdated: "", MultiChainFarming: [], ChainCurrent: [], MultichainFarmingCurrent: "", NetCrossChain: [], Profit: [] }, multichainList: [], chainFarmingInfo: [], liberoStats: [], gitbookPromotion: [], gitbookStaking: [] } },
            j = n("8b05");
        n("ddb0");
        const Q = { burnRate: "", marketCap: 0, circulatingSupply: "", backedLiquidityTreasury: 0, backedLiquidityRFV: 0, nextRebase: "", averageHolding: 0, riskFreeValueBalance: "", riskFreeValueBalanceFiat: "", farmingProfitFiat: "", treasuryBalance: "", treasuryBalanceFiat: "", liquidityBalance: "", liquidityBalanceFiat: "", totalBurned: "", totalBurnedFiat: "", nextBurnAmount: "", nextBurnAmountFiat: "", nextBurnDate: "", maxSellAmount: "", userBusdReward: "", price: "", apy: 158893.59, aprDaily: 2.04, allTimeHigh: "", totalVolume: "", priceChangePercent: "", totalHolder: "", balance: "", balanceFiat: "", dailyEarn: "", dailyEarnFiat: "", nextReward: "", nextRewardFiat: "", nextRewardYield: "", monthROI: "", monthROIFiat: "", bankAllowance: "" },
            K = { address: "", symbol: "", icon: "", decimal: 18, balance: "" },
            G = { referralLiberoPercents: [], referralBusdPercents: [], earlyWithdrawPenaltyRate: "", rewardRatio: "", maxLockedAmount: "", minLockedAmount: "", totalSupply: "", totalWithdrawn: "", totalDeposited: "", totalBusdReferral: "", totalLiberoReferral: "", totalRebaseWithdrawn: "", averageLockTime: "", busdAprDay: "", busdApr: "", liberoAprDay: "", liberoApy: "", referrer: "", lockedAmount: "", lockEnd: "", lockMinted: "", liberoBonus: "", liberoBonusFiat: "", busdBonus: "", totalLiberoBonus: 0, totalLiberoBonusFiat: 0, totalBusdBonus: "", referralByLevel: [], totalLiberoReward: "", totalBusdReward: "", busdAirdropCount: "", busdAirdropTime: 0, busdAirdropAmount: "", pendingLiberoReward: "", userLiberoReward: "", pendingBusdReward: "", userBusdReward: "", sharePercent: "", pendingLiberoRewardFiat: "", totalUserLiberoReward: "", totalUserLiberoRewardFiat: "", totalUserBusdReward: "" };

        function J(t, e) { t.tokenInfo = {...t.tokenInfo, ...Q, ...e } }

        function z(t, e) { t.tokens = [...e.map((t => ({...K, ...t })))] }

        function X(t, e) { t.networks = [...e] }

        function Z(t, e) { t.buybacks = [...e] }

        function tt(t, e) { t.transactionchannel = [...e] }

        function et(t, e) { t.bankInfo = {...t.bankInfo, ...G, ...e } }

        function nt(t, e) { t.compoundList = [...e] }

        function at(t, e) { t.youtubeplaylist = [...e] }

        function it(t, e) { t.multiChainFarming = {...e } }

        function ot(t, e) { t.multichainList = [...e] }

        function rt(t, e) { t.chainFarmingInfo = [...e] }

        function st(t, e) { t.liberoStats = [...e] }

        function ut(t, e) { t.gitbookPromotion = [...e] }

        function lt(t, e) { t.gitbookStaking = [...e] }
        var pt = n("bc3a"),
            dt = n.n(pt);
        async function ct(t, e) { try { let n = t.map((t => ({ address: t.address, name: "balanceOf", params: [e] }))); return await $(d["a"].prototype.$contracts.pancakePair.abi, n).then((e => e.map(((e, n) => ({...t[n], balance: parseFloat(C["a"].utils.formatUnits(e[0].toString(), t[n].decimal)) }))))) } catch (n) { return console.log("_fetchUserTokenBalances->Error", n), t } }
        async function mt(t) {
            try {
                let e = t.balance * t.aprDaily / 100,
                    n = e * t.price,
                    a = (t.totalSupply - t.totalBurned) / t.totalSupply,
                    i = t.balance * t.nextRewardYield * a / 100,
                    o = i * t.price,
                    r = 83.285,
                    s = t.balanceFiat * r / 100;
                return { dailyEarn: e, dailyEarnFiat: n, nextReward: i, nextRewardFiat: o, monthROI: r, monthROIFiat: s }
            } catch (e) { console.log("fetchTokenUserInfo->Error", e) }
        }
        async function yt(t) { try { let e = [{ address: d["a"].prototype.$contracts.mainToken.address, name: "balanceOf", params: [t] }, { address: d["a"].prototype.$contracts.mainToken.address, name: "allowance", params: [t, d["a"].prototype.$contracts.bankToken.address] }]; return await $(d["a"].prototype.$contracts.pancakePair.abi, e).then((t => ({ balance: C["a"].utils.formatEther(t[0][0].toString()), allowance: C["a"].utils.formatEther(t[1][0].toString()) }))) } catch (e) { console.log("fetchUserTokenInfo->Error", e) } }
        async function bt(t, e, n) {
            try {
                let a = [{ address: d["a"].prototype.$contracts.bankToken.address, name: "getUserReferralByLevel", params: [n] }, { address: d["a"].prototype.$contracts.bankToken.address, name: "getUserReferralBonus", params: [n] }, { address: d["a"].prototype.$contracts.bankToken.address, name: "getUserReferralTotalBonus", params: [n] }, { address: d["a"].prototype.$contracts.bankToken.address, name: "mintedForLock", params: [n] }, { address: d["a"].prototype.$contracts.bankToken.address, name: "referralInfo", params: [n] }, { address: d["a"].prototype.$contracts.bankToken.address, name: "userInfo", params: [n] }];
                return await $(d["a"].prototype.$contracts.bankToken.abi, a).then((n => {
                    let a = [parseInt(n[0]["lv1"]), parseInt(n[0]["lv2"]), parseInt(n[0]["lv3"]), parseInt(n[0]["lv4"]), parseInt(n[0]["lv5"])],
                        i = C["a"].utils.formatEther(n[1]["FEFEBonus"].toString()),
                        o = i * t.price,
                        r = C["a"].utils.formatEther(n[1]["busdBonus"].toString()),
                        s = C["a"].utils.formatEther(n[2]["totalFEFEBonus"].toString()),
                        u = s * t.price,
                        l = C["a"].utils.formatEther(n[2]["totalBusdBonus"].toString()),
                        p = C["a"].utils.formatEther(n[3][0].toString()),
                        d = n[4]["referrer"],
                        c = C["a"].utils.formatEther(n[5]["amount"].toString()),
                        m = parseInt(n[5]["end"].toString()),
                        y = parseFloat(p) / e.totalSupply * 100;
                    return { referrer: d, referralByLevel: a, liberoBonus: i, liberoBonusFiat: o, busdBonus: r, totalLiberoBonus: s, totalLiberoBonusFiat: u, totalBusdBonus: l, lockMinted: p, lockedAmount: c, lockEnd: m, sharePercent: y }
                }))
            } catch (a) { console.log("fetchUserBankInfo->User", a) }
            return e
        }
        async function ft(t, e) {
            try {
                let n = [{ address: d["a"].prototype.$contracts.bankToken.liberoTracker, name: "withdrawableDividendOf", params: [e] }, { address: d["a"].prototype.$contracts.bankToken.liberoTracker, name: "withdrawnDividendOf", params: [e] }, { address: d["a"].prototype.$contracts.bankToken.busdTracker, name: "withdrawableDividendOf", params: [e] }, { address: d["a"].prototype.$contracts.bankToken.busdTracker, name: "withdrawnDividendOf", params: [e] }];
                return await $(d["a"].prototype.$contracts.trackerDividend.abi, n).then((e => {
                    let n = C["a"].utils.formatEther(e[0][0].toString()),
                        a = C["a"].utils.formatEther(e[1][0].toString()),
                        i = C["a"].utils.formatEther(e[2][0].toString()),
                        o = C["a"].utils.formatEther(e[3][0].toString()),
                        r = parseFloat(n) + parseFloat(a),
                        s = t.price * r,
                        u = n * t.price,
                        l = parseFloat(i) + parseFloat(o);
                    return { pendingLiberoReward: n, userLiberoReward: a, pendingBusdReward: i, userBusdReward: o, pendingLiberoRewardFiat: u, totalUserLiberoReward: r, totalUserLiberoRewardFiat: s, totalUserBusdReward: l }
                }))
            } catch (n) { console.log("fetchTrackerInfo->Error", n) }
        }
        async function ht({ commit: t, dispatch: e }, n) {
            try {
                let a = await dt.a.get("/api/farm/v1"),
                    { tokens: i = [], tokenInfo: o = {}, networks: r = [], bankInfo: s = {}, compoundList: u = [] } = a.data.data;
                if (t("set_networks", r), n) {
                    i = await ct(i, n);
                    let { balance: t, allowance: e } = await yt(n);
                    o.balance = t, o.bankAllowance = e, o.balanceFiat = o.balance * o.price;
                    let a = await mt(o);
                    o = {...o, ...a };
                    let r = await bt(o, s, n),
                        u = await ft(o, n);
                    s = {...s, ...r, ...u }
                }
                t("set_tokens", i), t("set_tokenInfo", o), t("set_bankInfo", s), t("set_compoundList", u), e("bond/fetchBondData", n, { root: !0 })
            } catch (a) { return console.log("fetchAllData->Error", a), Promise.reject("fetchAllData->Error") }
        }
        async function gt({ commit: t }) {
            try {
                let e = await dt.a.get("/api/farm/v1/buybacks");
                t("set_buyBacks", e.data.data)
            } catch (e) { return console.log("fetchBuybacks->Error", e), Promise.reject("fetchBuybacks->Error") }
        }
        async function wt({ commit: t }) {
            try {
                let e = await dt.a.get("api/farm/v1/whale-alerts");
                t("set_transactionChannel", e.data.data)
            } catch (e) { return console.log("fetchtransactionChannel->Error", e), Promise.reject("fetchTransactionChannel->Error") }
        }
        async function kt({ commit: t }, { account: e, token: n, spender: a }) {
            try {
                let t = d["a"].prototype.$contracts.pancakePair.abi,
                    i = F({ address: n, abi: t });
                return i.methods["approve"](a, C["a"].constants.MaxUint256).send({ from: e })
            } catch (i) { console.log("approveToken->Error", i) }
        }
        async function Tt({ commit: t }, { action: e, account: n, amount: a, days: i, wantToken: o, referral: r = "0x0000000000000000000000000000000000000000", decimal: s = 18 }) {
            try {
                if (n) {
                    let t = F(d["a"].prototype.$contracts.bankToken),
                        u = a ? C["a"].utils.parseUnits(a.toString(), s).toString() : void 0,
                        l = i ? i.toString() : void 0,
                        p = { claimBusd: [], claimLibero: [], claimReferralBonus: [], withdraw: [], emergencyWithdraw: [], compoundBusd: [o], createLock: [u, l, r], increaseAmount: [u], increaseUnlockTime: [l] };
                    return t.methods[e](...p[e]).send({ from: n })
                }
                return Promise.reject("Please connect wallet")
            } catch (u) { throw console.log("WriteBankContract->Error", e), u }
        }
        async function Bt({}) { try { let t = await U(); return t.timestamp } catch (t) { console.log("getBlockTime->Error", t) } }
        async function vt({ commit: t }) {
            try {
                let e = "PLOmd-4HSmCocZEaIZRDdpHso4pALJpcq0",
                    n = await dt.a.get("https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=4&playlistId=" + e + "&key=AIzaSyDaqhnYApsyTt7oJbMZj-pr_EDnruEshVs");
                t("set_youtubePlaylist", n.data.items)
            } catch (e) { return console.log("fetchYoutubePlaylist->Error", e), Promise.reject("fetchYoutubePlaylist->Error") }
        }
        async function Et({ commit: t }) {
            try {
                let e = await dt.a.get("api/chainbalance/v1/fetchMultichainFarming");
                t("set_multiChainFarming", e.data.data)
            } catch (e) { return console.log("fetchMultiChainFarming->Error", e), Promise.reject("fetchMultiChainFarming->Error") }
        }
        async function Lt({ commit: t }) {
            try {
                let e = await dt.a.get("api/chainbalance/v1/getMultichainList");
                t("set_multichainList", e.data.data)
            } catch (e) { return console.log("getMultichainList->Error", e), Promise.reject("getMultichainList->Error") }
        }
        async function Rt({ commit: t }) {
            try {
                let e = await dt.a.get("api/chainbalance/v1/fetchChainFarming");
                t("set_chainFarmingInfo", e.data.data)
            } catch (e) { return console.log("fetchChainFarming->Error", e), Promise.reject("fetchChainFarming->Error") }
        }
        async function It({ commit: t }) {
            try {
                let e = await dt.a.get("api/chainbalance/v1/fetchFEFEStats");
                t("set_FEFEStats", e.data.data)
            } catch (e) { return console.log("fetchFEFEStats->Error", e), Promise.reject("fetchFEFEStats->Error") }
        }
        async function Ot({ commit: t }) {
            try {
                let e = await dt.a.get("api/news/v1/promotion");
                t("set_gitbookPromotion", e.data.data)
            } catch (e) { return console.log("fetchgitbookPromotion->Error", e), Promise.reject("fetchgitbookPromotion->Error") }
        }
        async function St({ commit: t }) {
            try {
                let e = await dt.a.get("api/news/v1/staking");
                t("set_gitbookStaking", e.data.data)
            } catch (e) { return console.log("fetchgitbookStaking->Error", e), Promise.reject("fetchgitbookStaking->Error") }
        }
        var _t = { namespaced: !0, getters: j, mutations: r, actions: s, state: V },
            At = function() { return { bondList: [], bondItems: [] } };

        function Mt(t) { return (e, n) => t.bondItems.filter((t => t.bondAddress === e))[n] }

        function Ct(t) { return e => t.bondItems.filter((t => t.bondAddress === e)) }

        function xt(t) { return e => t.bondList.find((t => t.slug === e)) || {} }

        function Pt(t) { return t.bondList }
        const Dt = { slug: "", bondAddress: "", name: "", icon: "", bondRate: "", buyTaxRate: "", discountRateNumerator: "", vestingPeriod: "", availableReward: "", maxRewardToBuy: "", maxWbnbToBuy: "", maxWbnb: "", minWbnb: "", isPaused: "", bondCount: "", stakingToken: "", stakingAllowance: "" },
            Ft = { bondAddress: "", bondIndex: "", bondedAt: "", bondedQty: "", vestingPeriod: "", vestingAmount: "", isWithdrawn: !1 };

        function $t(t, e) {
            let n = t.bondList;
            for (let a = 0; a < e.length; a++) {
                let t = e[a],
                    i = n.findIndex((e => e.bondAddress === t.bondAddress));
                i < 0 ? n.push({...Dt, ...t }) : n[i] = {...Dt, ...t }
            }
            t.bondList = [...n]
        }

        function Ut(t, e) { t.bondItems = [...e.map((t => ({...Ft, ...t })))] }
        async function Nt(t, e, n) {
            try {
                let a = [...Array(e).keys()],
                    i = d["a"].prototype.arrayChunk(a, 50),
                    o = [];
                for (let e = 0; e < i.length; e++) {
                    let a = i[e][0],
                        r = i[e].pop() + 1,
                        s = [{ address: t, name: "getBondsSlice", params: [n, a, r] }],
                        u = await $(d["a"].prototype.$contracts.smartBond.abi, s).then((e => e[0][0].map(((e, n) => {
                            let i = a + n,
                                o = parseInt(e["bondedAt"]),
                                r = C["a"].utils.formatEther(e["bondedQty"].toString()),
                                s = parseInt(e["vestingPeriod"]),
                                u = C["a"].utils.formatEther(e["vestingAmount"].toString()),
                                l = e["isWithdrawn"];
                            return { bondAddress: t, bondIndex: i, bondedAt: o, bondedQty: r, vestingPeriod: s, vestingAmount: u, isWithdrawn: l }
                        }))));
                    o.push(...u)
                }
                return o
            } catch (a) { console.log("_fetchBondPage->Error", a) }
        }
        async function Yt(t, e, n) { try { let a = [{ address: t, name: "balanceOf", params: [e] }, { address: t, name: "decimals", params: [] }, { address: t, name: "allowance", params: [e, n] }]; return await $(d["a"].prototype.$contracts.pancakePair.abi, a).then((t => ({ balance: C["a"].utils.formatUnits(t[0][0], t[1][0]), allowance: C["a"].utils.formatUnits(t[2][0], t[1][0]) }))) } catch (a) { console.log("getTokenBalanceWithAllowance->Error", a.message || a) } }
        async function qt(t, e) {
            let n = [];
            try {
                let a = [];
                t.forEach((t => { a.push({ address: t.bondAddress, name: "getBondCount", params: [e] }) })), await $(d["a"].prototype.$contracts.smartBond.abi, a).then((e => { t.forEach(((n, a) => { t[a].bondCount = parseInt(e[a][0].toString()) })) }));
                for (let i = 0; i < t.length; i++) {
                    let { bondAddress: a, bondCount: o, stakingToken: r } = t[i], { allowance: s } = await Yt(r, e, a);
                    t[i].stakingAllowance = s;
                    let u = await Nt(a, o, e);
                    n.push(...u)
                }
            } catch (a) { console.log("fetchUserBondInfo->Error", a) }
            return { bondList: t, bondItems: n }
        }
        async function Wt({ commit: t }, e) {
            try {
                let n = await dt.a.get("/api/farm/v1/smartBond"),
                    { bondList: a } = n.data.data,
                    i = [];
                if (e) {
                    let t = await qt(a, e);
                    a = t.bondList, i = t.bondItems
                }
                t("set_bondItems", i), t("set_bondList", a)
            } catch (n) { return console.log("fetchAllData->Error", n), Promise.reject("fetchAllData->Error") }
        }
        async function Ht({ commit: t }, { bondAddress: e, action: n, index: a, account: i, amount: o, decimal: r = 18 }) {
            try {
                if (i) {
                    let t = F({ abi: d["a"].prototype.$contracts.smartBond.abi, address: e }),
                        s = o ? C["a"].utils.parseUnits(o.toString(), r).toString() : void 0,
                        u = { bond: [s], withdraw: [a] };
                    return t.methods[n](...u[n]).send({ from: i })
                }
                return Promise.reject("Please connect wallet")
            } catch (s) { throw console.log("WriteBankContract->Error", n), s }
        }
        async function Vt({ commit: t }, { bondAddress: e, amount: n, decimal: a = 18 }) { let i = n ? C["a"].utils.parseUnits(n.toString(), a).toString() : void 0; try { let t = [{ address: e, name: "getRewardPrice", params: [i] }, { address: e, name: "getVestingAmount", params: [i] }]; return await $(d["a"].prototype.$contracts.smartBond.abi, t).then((t => ({ rewardPrice: C["a"].utils.formatEther(t[0][0]), vestingAmount: C["a"].utils.formatEther(t[1][0]) }))) } catch (o) { console.log("fetchBondEstimate->Error", o.message || o) } }
        var jt = { namespaced: !0, getters: u, mutations: l, actions: p, state: At };
        d["a"].use(L["a"]);
        var Qt = function() { return new L["a"].Store({ modules: { auth: H, farm: _t, bond: jt }, strict: !1 }) },
            Kt = n("8c4f");
        const Gt = [{ path: "/", component: () => Promise.all([n.e(0), n.e(1), n.e(18)]).then(n.bind(null, "2710")), children: [{ path: "/", component: () => Promise.all([n.e(0), n.e(1), n.e(15)]).then(n.bind(null, "8b24")) }, { path: "/app", component: () => Promise.all([n.e(0), n.e(1), n.e(21)]).then(n.bind(null, "ec95")) }, { path: "/account", component: () => Promise.all([n.e(0), n.e(1), n.e(22)]).then(n.bind(null, "8c2d")) }, { path: "/staking", component: () => Promise.all([n.e(0), n.e(17)]).then(n.bind(null, "b06b")) }, { path: "/steps", component: () => Promise.all([n.e(0), n.e(27)]).then(n.bind(null, "7693")) }, { path: "/buybacks", component: () => Promise.all([n.e(0), n.e(1), n.e(24)]).then(n.bind(null, "12f5")) }, { path: "/FEFE-bank", component: () => Promise.all([n.e(0), n.e(1), n.e(23)]).then(n.bind(null, "ab54")) }, { path: "/Coming%20Soon", component: () => n.e(20).then(n.bind(null, "74cd")) }, { path: "/wallets/:network", component: () => Promise.all([n.e(0), n.e(1), n.e(28)]).then(n.bind(null, "dd40")) }, { path: "/promotions", component: () => Promise.all([n.e(0), n.e(1), n.e(16)]).then(n.bind(null, "92b5")) }, { path: "/referral", component: () => Promise.all([n.e(0), n.e(1), n.e(26)]).then(n.bind(null, "339c")) }, { path: "/smart-bond", component: () => Promise.all([n.e(0), n.e(31)]).then(n.bind(null, "de04")) }, { path: "/smart-bond/:bondSlug", component: () => Promise.all([n.e(0), n.e(30)]).then(n.bind(null, "8cdb")), props: !0 }, { path: "/wFEFE", component: () => Promise.all([n.e(0), n.e(29)]).then(n.bind(null, "b031")) }, { path: "/multichain-farming", component: () => Promise.all([n.e(0), n.e(1), n.e(19)]).then(n.bind(null, "d7df")) }] }, { path: "*", component: () => n.e(25).then(n.bind(null, "e51e")) }];
        var Jt = Gt;
        d["a"].use(Kt["a"]);
        var zt = function() { return new Kt["a"]({ scrollBehavior: () => ({ x: 0, y: 0 }), routes: Jt, mode: "history", base: "/" }) },
            Xt = async function() {
                const t = "function" === typeof Qt ? await Qt({ Vue: d["a"] }) : Qt,
                    e = "function" === typeof zt ? await zt({ Vue: d["a"], store: t }) : zt;
                t.$router = e;
                const n = { router: e, store: t, render: t => t(E), el: "#q-app" };
                return { app: n, store: t, router: e }
            },
            Zt = n("a925"),
            te = n("12cb");
        d["a"].use(Zt["a"]);
        const ee = new Zt["a"]({ locale: "en", fallbackLocale: "en", messages: te["default"] });
        var ne = ({ app: t }) => { t.i18n = ee },
            ae = async({ Vue: t }) => { dt.a.defaults.baseURL = "https://libero.financial", t.prototype.$axios = dt.a },
            ie = function() {
                var t = this,
                    e = t.$createElement,
                    n = t._self._c || e;
                return n("q-card", { staticClass: "grow-box", staticStyle: { width: "500px" } }, [n("q-toolbar", { staticClass: "bg-blue-5" }, [n("q-toolbar-title", [t._v(t._s(t.$t("Claim Airdrop")))]), n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], attrs: { dense: "", icon: "close", round: "", unelevated: "" } })], 1), n("q-card-section", { staticClass: "text-h6 q-py-xl" }, [n("div", { staticClass: "text-center q-mb-lg" }, [n("q-img", { attrs: { src: "https://storage.googleapis.com/libero-cdn/public/v1/logo.png", width: "150px" } })], 1), n("div", { staticClass: "row items-center q-col-gutter-md" }, [n("div", { staticClass: "col-auto" }, [t._v("\n        " + t._s(t.$t("Available Airdrop Treasure")) + "\n      ")]), n("div", { staticClass: "col-grow" }, [t.isFetched ? n("span", { staticClass: "text-primary" }, [t._v(t._s(t.airDrop.available.formatNumber()) + " LIBERO")]) : n("q-skeleton", { attrs: { type: "text", width: "120px", height: "30px" } })], 1), n("div", { staticClass: "col-auto" }, [t._v("\n        " + t._s(t.$t("Reward Amount Per Wallet")) + "\n      ")]), n("div", { staticClass: "col-grow" }, [t.isFetched ? n("span", { staticClass: "text-primary" }, [t._v(t._s(t.airDrop.rewardAmount.formatNumber(3)) + " LIBERO")]) : n("q-skeleton", { attrs: { type: "text", width: "120px", height: "30px" } })], 1)])]), n("q-card-section", { staticClass: "bg-dark text-h6" }, [n("div", { staticClass: "row items-center justify-between" }, [t.isLogon ? t._e() : n("div", { staticClass: "col-12 text-center" }, [n("q-btn", { staticClass: "q-px-md", attrs: { push: "", size: "lg", color: "yellow-8", "text-color": "dark", "no-caps": "" }, on: { click: function(e) { return t.$root.$emit("connectWallet") } } }, [t._v(t._s(t.$t("Connect Wallet")))])], 1), t.airDrop.isWhitelistEnable && !t.airDrop.isWhitelisted ? [n("div", { staticClass: "col-12" }, [t._v("\n          " + t._s(t.$t("You are not on the CoinMarketcap Airdrop 1000 winners list today."))), n("br")])] : [n("div", { staticClass: "col-auto" }, [t._v("\n          " + t._s(t.$t("Claim Your Reward")) + "\n        ")]), n("div", { staticClass: "col-auto" }, [t.airDrop.isClaimed ? n("q-btn", { staticClass: "no-pointer-events", attrs: { color: "primary", "text-color": "white", label: "Claimed", "no-caps": "", outline: "", size: "lg", unelevated: "" } }) : n("q-btn", { attrs: { loading: t.isLoading, color: "primary", "text-color": "white", label: "Claim", "no-caps": "", size: "lg", unelevated: "" }, on: { click: t.doClaim } })], 1)]], 2)])], 1)
            },
            oe = [],
            re = (n("a79d"), { data() { return { isFetched: !1, isLoading: !1, airDrop: { isWhitelistEnable: "", isWhitelistStarted: "", available: "", rewardAmount: "", isWhitelisted: "", isClaimed: "" } } }, computed: {...Object(L["b"])({ isLogon: "auth/isLogon", getAccount: "auth/getAccount" }) }, methods: { fetchData() { this.$store.dispatch("auth/fetchAirdrop", this.getAccount).then((t => { this.airDrop = {...this.airDrop, ...t } })).finally((() => { this.isFetched = !0 })) }, doClaim() { this.isLoading = !0, this.$store.dispatch("auth/claimAirdrop", this.getAccount).then((t => { this.$root.$emit("showMessage", t) })).catch((t => { this.$root.$emit("showMessage", { status: !1, message: t }) })).finally((() => { this.isLoading = !1 })) } }, mounted() { this.fetchData(), this.interval = setInterval(this.fetchData, 6e3) }, beforeDestroy() { this.interval && clearInterval(this.interval) } }),
            se = re,
            ue = n("f09f"),
            le = n("65c6"),
            pe = n("6ac5"),
            de = n("9c40"),
            ce = n("a370"),
            me = n("068f"),
            ye = n("293e"),
            be = n("7f67"),
            fe = n("eebe"),
            he = n.n(fe),
            ge = Object(B["a"])(se, ie, oe, !1, null, null, null),
            we = ge.exports;
        he()(ge, "components", { QCard: ue["a"], QToolbar: le["a"], QToolbarTitle: pe["a"], QBtn: de["a"], QCardSection: ce["a"], QImg: me["a"], QSkeleton: ye["a"] }), he()(ge, "directives", { ClosePopup: be["a"] });
        var ke = function() {
                var t = this,
                    e = t.$createElement,
                    n = t._self._c || e;
                return n("q-card", { staticClass: "bg-blue-grey-2", staticStyle: { width: "550px" } }, [n("q-toolbar", { staticClass: "bg-grey-6 text-black" }, [n("q-toolbar-title", [t._v(t._s(t.$t("User Info")))]), n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], attrs: { dense: "", icon: "far fa-times-circle", round: "", unelevated: "" } })], 1), n("q-card-section", [n("div", { staticClass: "rounded-borders bg-grey-2 q-pa-md" }, [n("div", { staticClass: "row q-col-gutter-md" }, [n("div", { staticClass: "col-xs-12 col-sm-grow" }, [n("div", { staticClass: "text-h6 text-dark" }, [t._v("\n            " + t._s(t.accountText) + "\n          ")]), n("a", { staticClass: "text-blue-9 text-body2", attrs: { href: t.scanLink, target: "_blank" } }, [t._v(t._s(t.$t("View on BscScan")) + "\n            "), n("q-icon", { attrs: { name: "fas fa-external-link-alt" } })], 1)]), n("div", { staticClass: "col-xs-12 col-sm-auto" }, [n("div", { staticClass: "column q-col-gutter-y-sm" }, [n("div", { staticClass: "col" }, [n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], staticClass: "fit", attrs: { color: "purple-8", icon: "hive", "no-caps": "", size: "lg", "text-color": "white", unelevated: "", label: t.$t("Switch Network") }, on: { click: function(e) { return t.$root.$emit("showDialog", { type: "card-select-network", persistent: !0 }) } } })], 1), n("div", { staticClass: "col" }, [n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], staticClass: "fit", attrs: { color: "blue-8", icon: "account_balance", "no-caps": "", size: "lg", "text-color": "white", to: "/account", unelevated: "", label: t.$t("Account") } })], 1), n("div", { staticClass: "col" }, [n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], staticClass: "fit", attrs: { color: "negative", icon: "logout", "no-caps": "", size: "lg", "text-color": "white", unelevated: "", label: t.$t("Logout") }, on: { click: t.disconnect } })], 1)])])])])])], 1)
            },
            Te = [],
            Be = { computed: {...Object(L["b"])({ getAccountAddress: "auth/getAccount" }), accountText() { return this.shortAddress(this.getAccountAddress, 6) }, scanLink() { return this.getScanLink(this.getAccountAddress) } }, methods: { disconnect() { this.$store.dispatch("auth/disconnect") } } },
            ve = Be,
            Ee = n("0016"),
            Le = Object(B["a"])(ve, ke, Te, !1, null, null, null),
            Re = Le.exports;
        he()(Le, "components", { QCard: ue["a"], QToolbar: le["a"], QToolbarTitle: pe["a"], QBtn: de["a"], QCardSection: ce["a"], QIcon: Ee["a"] }), he()(Le, "directives", { ClosePopup: be["a"] });
        var Ie = function() {
                var t = this,
                    e = t.$createElement,
                    n = t._self._c || e;
                return n("q-card", { staticClass: "grow-box", staticStyle: { width: "500px" } }, [n("q-toolbar", { staticClass: "bg-blue-5" }, [n("q-toolbar-title", [t._v(t._s(t.$t("Promotion")))]), n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], attrs: { dense: "", icon: "close", round: "", unelevated: "" } })], 1), n("q-card-section", { staticClass: "text-h6 q-py-xl" }, [n("div", { staticClass: "text-center q-mb-lg" }, [n("q-img", { attrs: { src: "https://storage.googleapis.com/libero-cdn/public/v1/logo.png", width: "150px" } })], 1), n("div", { staticClass: "row items-center q-col-gutter-md" }, [n("div", { staticClass: "col-auto" }, [t._v("\n        " + t._s(t.$t("Congratulations !!!")) + "\n      ")]), n("div", { staticClass: "col-auto" }, [t._v("\n        " + t._s(t.$t("You are eligible to receive 1 free FEFE t-shirt. Get this discount code: ") + this.item.code + t.$t(" and proceed to order in our shop. ")) + "\n        "), n("a", { attrs: { href: this.item.link } }, [t._v(t._s(this.item.link))])])])])], 1)
            },
            Oe = [],
            Se = { props: { item: { type: Object, required: !0, default: () => ({}) } } },
            _e = Se,
            Ae = Object(B["a"])(_e, Ie, Oe, !1, null, null, null),
            Me = Ae.exports;
        he()(Ae, "components", { QCard: ue["a"], QToolbar: le["a"], QToolbarTitle: pe["a"], QBtn: de["a"], QCardSection: ce["a"], QImg: me["a"] }), he()(Ae, "directives", { ClosePopup: be["a"] });
        var Ce = function() {
                var t = this,
                    e = t.$createElement,
                    n = t._self._c || e;
                return n("q-card", { staticStyle: { width: "550px" }, attrs: { dark: "" } }, [n("q-toolbar", {}, [n("q-toolbar-title", [t._v("Unlock xFEFE")]), n("q-btn", { directives: [{ name: "close-popup", rawName: "v-close-popup" }], attrs: { dense: "", icon: "close", round: "", unelevated: "" } })], 1), n("q-card-section", [n("div", [t._v("You can unlock 100% on: " + t._s(new Date(1e3 * t.bankInfo.lockEnd).format()))]), t.isFeeUnlock ? t._e() : n("div", { staticClass: "text-orange" }, [t._v("Early unlock penalty fee is: " + t._s(t.bankInfo.earlyWithdrawPenaltyRate) + "%")]), t.bankInfo.lockedAmount > 0 ? [n("div", [t._v("You locked: " + t._s(parseFloat(parseFloat(t.bankInfo.lockedAmount).toFixed(2)).toLocaleString()) + " FEFE")]), n("div", [t._v("You will receive: " + t._s(parseFloat(t.unlockAmount.toFixed(2)).toLocaleString()) + " FEFE")])] : t._e()], 2), n("q-card-actions", { attrs: { align: "center" } }, [n("q-btn", { staticClass: "q-px-sm", attrs: { unelevated: "", color: "orange", size: "lg", "no-caps": "", disable: !t.isFetched, loading: t.isLoading }, on: { click: t.doUnlock } }, [t._v("\n      " + t._s(t.isFeeUnlock ? "Unlock" : "Early Unlock") + "\n    ")])], 1)], 1)
            },
            xe = [],
            Pe = (n("e9c4"), { data() { return { isLoading: !1, isFetched: !1, blockTime: 0 } }, computed: {...Object(L["b"])({ isLogon: "auth/isLogon", getAccount: "auth/getAccount", getTokenInfo: "farm/getTokenInfo", getBankInfo: "farm/getBankInfo" }), tokenInfo() { return JSON.parse(JSON.stringify(this.getTokenInfo)) }, bankInfo() { return JSON.parse(JSON.stringify(this.getBankInfo)) }, isFeeUnlock() { return this.blockTime > this.bankInfo.lockEnd }, unlockAmount() { return this.isFeeUnlock ? parseFloat(this.bankInfo.lockedAmount) : (100 - this.bankInfo.earlyWithdrawPenaltyRate) * this.bankInfo.lockedAmount / 100 } }, methods: { doUnlock() { this.isFeeUnlock ? (this.isLoading = !0, this.$store.dispatch("farm/writeBankContract", { action: "withdraw", account: this.getAccount }).then((t => { this.$root.$emit("showMessage", t), this.$emit("close") })).catch((t => { this.$root.$emit("showMessage", { status: !1, message: t.message }) })).finally((() => { this.isLoading = !1 }))) : (this.isLoading = !0, this.$store.dispatch("farm/writeBankContract", { action: "emergencyWithdraw", account: this.getAccount }).then((t => { this.$root.$emit("showMessage", t), this.$emit("close") })).catch((t => { this.$root.$emit("showMessage", { status: !1, message: t.message }) })).finally((() => { this.isLoading = !1 }))) }, getBlockTime() { this.$store.dispatch("farm/getBlockTime").then((t => { this.isFetched = !0, this.blockTime = t })) } }, mounted() { this.getBlockTime() } }),
            De = Pe,
            Fe = n("4b7e"),
            $e = Object(B["a"])(De, Ce, xe, !1, null, null, null),
            Ue = $e.exports;
        he()($e, "components", { QCard: ue["a"], QToolbar: le["a"], QToolbarTitle: pe["a"], QBtn: de["a"], QCardSection: ce["a"], QCardActions: Fe["a"] }), he()($e, "directives", { ClosePopup: be["a"] });
        var Ne = function() {
                var t = this,
                    e = t.$createElement,
                    n = t._self._c || e;
                return n("q-card", { staticClass: "bg-blue-grey-2", staticStyle: { width: "550px" } }, [n("q-toolbar", { staticClass: "bg-grey-6 text-black" }, [n("q-toolbar-title", [t._v("Select a Network")])], 1), n("q-card-section", [n("div", { staticClass: "rounded-borders bg-grey-2 q-pa-md" }, [n("q-list", [t._l(t.networkOptions, (function(e, a) { return [n("q-item", { key: a, staticClass: "text-blue rounded-borders", attrs: { clickable: "" }, on: { click: function(n) { return t.onClicked(e) } } }, [n("q-item-section", { attrs: { thumbnail: "" } }, [n("q-avatar", { staticClass: "q-ml-sm", attrs: { square: "", size: "42px" } }, [n("q-img", { attrs: { src: e.icon } })], 1)], 1), n("q-item-section", [n("q-item-label", { staticClass: "text-h6 text-dark" }, [t._v(t._s(e.label))]), e.desc ? n("q-item-label", { attrs: { lines: "2" } }, [t._v(t._s(e.desc))]) : t._e()], 1)], 1)] }))], 2)], 1)])], 1)
            },
            Ye = [],
            qe = { data() { return { current: parseInt(56) } }, computed: { refQuery() { let t = this.$q.cookies.get("referrer"); return t ? "?ref=" + this.$q.cookies.get("referrer") : "" }, networkOptions() { return this.$networkItems.map((t => ({ networkId: t.chainId, label: t.chainName, desc: t.mainSiteUrl, icon: t.iconUrls[0], route: t.mainSiteUrl + this.refQuery }))) } }, methods: { onClicked(t) { t.networkId !== this.current ? window.location.href = t.route : (this.$root.$emit("connectWallet"), "/app" !== this.$route.path && this.$router.push("/app")), this.$emit("close") } } },
            We = qe,
            He = n("1c1c"),
            Ve = n("66e5"),
            je = n("4074"),
            Qe = n("cb32"),
            Ke = n("0170"),
            Ge = Object(B["a"])(We, Ne, Ye, !1, null, null, null),
            Je = Ge.exports;
        he()(Ge, "components", { QCard: ue["a"], QToolbar: le["a"], QToolbarTitle: pe["a"], QCardSection: ce["a"], QList: He["a"], QItem: Ve["a"], QItemSection: je["a"], QAvatar: Qe["a"], QImg: me["a"], QItemLabel: Ke["a"] });
        var ze = n("201b"),
            Xe = n.n(ze),
            Ze = async({ Vue: t }) => { t.use(Xe.a), t.component("card-air-drop", we), t.component("card-user-wallet", Re), t.component("card-promotion", Me), t.component("card-bank-withdraw", Ue), t.component("card-select-network", Je) },
            tn = (n("d9e2"), async({ Vue: t }) => {
                t.prototype.isValidAddress = t => C["a"].utils.isAddress(t), t.prototype.sleepSeconds = async t => await new Promise((e => setTimeout(e, t))), t.prototype.shortAddress = (t, e = 4, n = 4) => t ? t.toString().substr(0, n) + "...." + t.toString().substr(-1 * e) : "", t.prototype.shortUrl = t => t.split("/")[0] + "//" + t.split("/")[2] + "/......", t.prototype.getTxLink = t => "https://bscscan.com/tx/" + t, t.prototype.getScanLink = t => "https://bscscan.com/address/" + t, t.prototype.getRPCUrl = () => { let e = t.prototype.$networkItems.find((t => t.chainId === parseInt(56))); return e.rpcUrls[0] }, t.prototype.getRPCOptions = () => { let e = {}; return t.prototype.$networkItems.forEach((t => { e[t.chainId] = t.rpcUrls[0] })), e }, t.prototype.shortInterval = t => {
                    let e = t / 3600,
                        n = t / 60;
                    if (e >= 24) {
                        let t = e % 24 > 0 ? " " + e % 24 + " hours" : "",
                            n = (e - e % 24) / 24;
                        return n + " days" + t
                    }
                    return n >= 60 ? e + " hours" : n + " minutes"
                }, t.prototype.shortBigNumber = t => (t = parseFloat(t), t >= 1e21 ? (t / 1e21).toLocaleString() + " MQT" : t >= 1e15 ? (t / 1e15).toLocaleString() + " QT" : t >= 1e9 ? (t / 1e9).toLocaleString() + " T" : t >= 1e6 ? (t / 1e6).toLocaleString() + " M" : t ? parseFloat(t.toFixed(2)).toLocaleString() : void 0), t.prototype.arrayChunk = (t, e) => Array.from({ length: Math.ceil(t.length / e) }, ((n, a) => t.slice(a * e, a * e + e))), t.prototype.timeDistance = t => {
                    let e = { days: 0, hours: 0, minutes: 0, seconds: 0 },
                        n = Math.floor((new Date).getTime() / 1e3),
                        a = t - n,
                        i = a > 0;
                    return i && (e.days = Math.floor(a / 86400), e.hours = Math.floor(a % 86400 / 3600), e.minutes = Math.floor(a % 3600 / 60), e.seconds = Math.floor(a % 60)), { counting: i, distance: e }
                };
                let e = function() {
                    let t = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
                        n = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
                        a = /[^-+\dA-Z]/g,
                        i = function(t, e) { t = String(t), e = e || 2; while (t.length < e) t = "0" + t; return t };
                    return function(o, r, s) {
                        let u = e;
                        if (1 !== arguments.length || "[object String]" !== Object.prototype.toString.call(o) || /\d/.test(o) || (r = o, o = void 0), o = o ? new Date(o) : new Date, isNaN(o)) throw SyntaxError("invalid date");
                        r = String(u.masks[r] || r || u.masks["default"]), "UTC:" === r.slice(0, 4) && (r = r.slice(4), s = !0);
                        let l = s ? "getUTC" : "get",
                            p = o[l + "Date"](),
                            d = o[l + "Day"](),
                            c = o[l + "Month"](),
                            m = o[l + "FullYear"](),
                            y = o[l + "Hours"](),
                            b = o[l + "Minutes"](),
                            f = o[l + "Seconds"](),
                            h = o[l + "Milliseconds"](),
                            g = s ? 0 : o.getTimezoneOffset(),
                            w = { d: p, dd: i(p), ddd: u.i18n.dayNames[d], dddd: u.i18n.dayNames[d + 7], m: c + 1, mm: i(c + 1), mmm: u.i18n.monthNames[c], mmmm: u.i18n.monthNames[c + 12], yy: String(m).slice(2), yyyy: m, h: y % 12 || 12, hh: i(y % 12 || 12), H: y, HH: i(y), M: b, MM: i(b), s: f, ss: i(f), l: i(h, 3), L: i(h > 99 ? Math.round(h / 10) : h), t: y < 12 ? "a" : "p", tt: y < 12 ? "am" : "pm", T: y < 12 ? "A" : "P", TT: y < 12 ? "AM" : "PM", Z: s ? "UTC" : (String(o).match(n) || [""]).pop().replace(a, ""), o: (g > 0 ? "-" : "+") + i(100 * Math.floor(Math.abs(g) / 60) + Math.abs(g) % 60, 4), S: ["th", "st", "nd", "rd"][p % 10 > 3 ? 0 : (p % 100 - p % 10 !== 10) * p % 10] };
                        return r.replace(t, (function(t) { return t in w ? w[t] : t.slice(1, t.length - 1) }))
                    }
                }();
                e.masks = { default: "ddd mmm dd yyyy HH:MM:ss", shortDate: "m/d/yy", mediumDate: "mmm d, yyyy", longDate: "mmmm d, yyyy", fullDate: "dddd, mmmm d, yyyy", shortTime: "h:MM TT", mediumTime: "h:MM:ss TT", longTime: "h:MM:ss TT Z", isoDate: "yyyy-mm-dd", isoTime: "HH:MM:ss", isoDateTime: "yyyy-mm-dd'T'HH:MM:ss", isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'" }, e.i18n = { dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, Date.prototype.format = function(t, n) { return e(this, t, n) }, String.prototype.formatNumber = function(t = 0) { return parseFloat(parseFloat(this).toFixed(t)).toLocaleString() }, Number.prototype.formatNumber = function(t = 0) { return parseFloat(this.toFixed(t)).toLocaleString() }, String.prototype.capitalize = function() { return this.charAt(0).toUpperCase() + this.slice(1) }
            }),
            en = async({ Vue: t }) => { t.prototype.$networkItems = [{ chainId: 56, chainName: "BNBChain", rpcUrls: ["https://bsc-dataseed.binance.org/"], iconUrls: ["https://storage.googleapis.com/thor2-cdn/public/icons/bsc-network.png"], nativeCurrency: { name: "Binance Coin", symbol: "BNB", decimals: 18 }, blockExplorerUrls: ["https://bscscan.com/"], mainSiteUrl: "https://libero.financial" }, { chainId: 250, chainName: "Fantom", rpcUrls: ["https://rpc.ftm.tools/"], iconUrls: ["https://storage.googleapis.com/thor2-cdn/public/icons/fantom-network.png"], nativeCurrency: { name: "Fantom", symbol: "FTM", decimals: 18 }, blockExplorerUrls: ["https://ftmscan.com/"], mainSiteUrl: "https://flibero.financial" }] },
            nn = async({ Vue: t }) => { t.prototype.$contracts = { fiatAddress: ["0xe9e7cea3dedca5984780bafc599bd69add087d56", "0x55d398326f99059ff775485246999027b3197955", "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d", "0x14016e85a25aeb13065688cafb43044c2ef86784"], pancakeFactory: { address: "0xca143ce32fe78f1f7019d7d551a6402fc5350c73", abi: n("ae0a") }, pancakeRouter: { address: "0x10ED43C718714eb63d5aA57B78B54704E256024E", abi: n("86cc") }, pancakePair: { abi: n("4a43") }, multiCall: { address: "0x1ee38d535d541c55c9dae27b12edf090c608e6fb", abi: n("0af5") }, networkToken: { address: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c", symbol: "WBNB", icon: "https://storage.googleapis.com/thor2-cdn/public/coins/WBNB.png" }, mainToken: { address: "0x0DFCb45EAE071B3b846E220560Bbcdd958414d78", symbol: "FEFE", icon: "https://storage.googleapis.com/thor2-cdn/public/coins/LIBERO.webp", abi: n("a53d"), treasuryWallet: "0x94DC0b13E66ABa9450b3Cc44c2643BBb4C264BC7", busdTrackingRewardWallet: "0x5A50173A8c02464ba737B669fadAe2fdAd293157" }, airDrop: { address: "0xA4128088573b5EcDb1fb974670b49969b8E2F982", abi: n("eb99") }, lockingToken: { address: "" }, bankToken: { address: "0xb2b11D8DA4cd9c20410de6EB55BAD2734983040E", abi: n("84f5"), symbol: "xFEFE", icon: "https://storage.googleapis.com/libero-cdn/public/icon/xlibero.webp", liberoTracker: "0x1d81400B943EADd8a56920a1C31c541FE048f676", busdTracker: "0xa78b001772B4e1e846072a57cA622D11f5192Fe1" }, trackerDividend: { abi: n("c5e4") }, smartBond: { abi: n("0045") } } };
        const an = "/";
        async function on() {
            const { app: t, store: e, router: n } = await Xt();
            let a = !1;
            const i = t => {
                    a = !0;
                    const e = Object(t) === t ? n.resolve(t).route.fullPath : t;
                    window.location.href = e
                },
                o = window.location.href.replace(window.location.origin, ""),
                r = [ne, ae, Ze, tn, en, nn];
            for (let u = 0; !1 === a && u < r.length; u++)
                if ("function" === typeof r[u]) try { await r[u]({ app: t, router: n, store: e, Vue: d["a"], ssrContext: null, redirect: i, urlPath: o, publicPath: an }) } catch (s) { return s && s.url ? void(window.location.href = s.url) : void console.error("[Quasar] boot error:", s) }!0 !== a && new d["a"](t)
        }
        on()
    },
    3: function(t, e) {},
    4: function(t, e) {},
    "4a43": function(t) { t.exports = JSON.parse('[{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"_reserve0","type":"uint112"},{"internalType":"uint112","name":"_reserve1","type":"uint112"},{"internalType":"uint32","name":"_blockTimestampLast","type":"uint32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]') },
    5: function(t, e) {},
    6: function(t, e) {},
    7: function(t, e) {},
    8: function(t, e) {},
    "84f5": function(t) { t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"busdDividendToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"busdDividendTracker","outputs":[{"internalType":"contract IDividendTracker","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimBusd","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimLibero","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimReferralBonus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_wantToken","type":"address"}],"name":"compoundBusd","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_days","type":"uint256"},{"internalType":"address","name":"_referrer","type":"address"}],"name":"createLock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"depositFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"earlyWithdrawPenaltyRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReferralBusdPercents","outputs":[{"internalType":"uint256","name":"lv1","type":"uint256"},{"internalType":"uint256","name":"lv2","type":"uint256"},{"internalType":"uint256","name":"lv3","type":"uint256"},{"internalType":"uint256","name":"lv4","type":"uint256"},{"internalType":"uint256","name":"lv5","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReferralLiberoPercents","outputs":[{"internalType":"uint256","name":"lv1","type":"uint256"},{"internalType":"uint256","name":"lv2","type":"uint256"},{"internalType":"uint256","name":"lv3","type":"uint256"},{"internalType":"uint256","name":"lv4","type":"uint256"},{"internalType":"uint256","name":"lv5","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"getUserReferralBonus","outputs":[{"internalType":"uint256","name":"liberoBonus","type":"uint256"},{"internalType":"uint256","name":"busdBonus","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"getUserReferralByLevel","outputs":[{"internalType":"uint256","name":"lv1","type":"uint256"},{"internalType":"uint256","name":"lv2","type":"uint256"},{"internalType":"uint256","name":"lv3","type":"uint256"},{"internalType":"uint256","name":"lv4","type":"uint256"},{"internalType":"uint256","name":"lv5","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"getUserReferralTotalBonus","outputs":[{"internalType":"uint256","name":"totalLiberoBonus","type":"uint256"},{"internalType":"uint256","name":"totalBusdBonus","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"increaseAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_days","type":"uint256"}],"name":"increaseUnlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liberoDividendToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liberoDividendTracker","outputs":[{"internalType":"contract IDividendTracker","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"lockedEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"lockedOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLockedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minLockedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintedForLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyCollector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralInfo","outputs":[{"internalType":"address","name":"referrer","type":"address"},{"internalType":"uint256","name":"liberoBonus","type":"uint256"},{"internalType":"uint256","name":"totalLiberoBonus","type":"uint256"},{"internalType":"uint256","name":"busdBonus","type":"uint256"},{"internalType":"uint256","name":"totalBusdBonus","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"referralTreasury","outputs":[{"internalType":"contract ITreasury","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sendRebaseReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_tracker","type":"address"}],"name":"setBusdTracker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_earlyWithdrawPenaltyRate","type":"uint256"}],"name":"setEarlyWithdrawPenaltyRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"setFeeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_tracker","type":"address"}],"name":"setLiberoTracker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minLockedAmount","type":"uint256"},{"internalType":"uint256","name":"_maxLockedAmount","type":"uint256"}],"name":"setLimitLockedAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"setPenaltyCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lv1","type":"uint256"},{"internalType":"uint256","name":"_lv2","type":"uint256"},{"internalType":"uint256","name":"_lv3","type":"uint256"},{"internalType":"uint256","name":"_lv4","type":"uint256"},{"internalType":"uint256","name":"_lv5","type":"uint256"}],"name":"setReferralBusdPercents","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lv1","type":"uint256"},{"internalType":"uint256","name":"_lv2","type":"uint256"},{"internalType":"uint256","name":"_lv3","type":"uint256"},{"internalType":"uint256","name":"_lv4","type":"uint256"},{"internalType":"uint256","name":"_lv5","type":"uint256"}],"name":"setReferralLiberoPercents","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"setReferralTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ratio","type":"uint256"}],"name":"setRewardRatio","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBusdReferral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLiberoReferral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRebaseWithdrawn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWithdrawn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_days","type":"uint256"}],"name":"votingPowerLockedDays","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_unlock_time","type":"uint256"}],"name":"votingPowerUnlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]') },
    "86cc": function(t) { t.exports = JSON.parse('[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}]') },
    "8b05": function(t, e, n) {
        "use strict";
        n.r(e), n.d(e, "getToken", (function() { return i })), n.d(e, "getTokenInfo", (function() { return o })), n.d(e, "getNetworks", (function() { return r })), n.d(e, "getNetwork", (function() { return s })), n.d(e, "getBuyBacks", (function() { return u })), n.d(e, "getTransactionChannel", (function() { return l })), n.d(e, "getBankInfo", (function() { return p })), n.d(e, "getCompoundList", (function() { return d })), n.d(e, "getYoutubePlaylist", (function() { return c })), n.d(e, "getMultiChainFarming", (function() { return m })), n.d(e, "getMultichainList", (function() { return y })), n.d(e, "getChainFarmingInfo", (function() { return b })), n.d(e, "getFEFEStats", (function() { return f })), n.d(e, "getGitbookPromotion", (function() { return h })), n.d(e, "getGitbookStaking", (function() { return g }));
        const a = { address: "", symbol: "", icon: "", decimal: 18, balance: "" };

        function i(t) { return e => t.tokens.find((t => t.address.toLowerCase() === e.toLowerCase())) || a }

        function o(t) { return t.tokenInfo }

        function r(t) { return t.networks }

        function s(t) { return e => t.networks.find((t => t.id === e || t.name === e)) || {} }

        function u(t) { return t.buybacks || [] }

        function l(t) { return t.transactionchannel || [] }

        function p(t) { return t.bankInfo }

        function d(t) { return t.compoundList }

        function c(t) { return t.youtubeplaylist || [] }

        function m(t) { return t.multiChainFarming }

        function y(t) { return t.multichainList || [] }

        function b(t) { return t.chainFarmingInfo || [] }

        function f(t) { return t.liberoStats || [] }

        function h(t) { return t.gitbookPromotion || [] }

        function g(t) { return t.gitbookStaking || [] }
    },
    9: function(t, e) {},
    "923f": function(t, e, n) {
        "use strict";
          n.r(e), e["default"] = { WhenLambo: "https://storage.googleapis.com/libero-cdn/public/promotion/WhenLambo.mp4", airdrop100k: "https://storage.googleapis.com/libero-cdn/public/promotion/100kairdrop.gif", AffiliateProgram: "https://storage.googleapis.com/libero-cdn/public/promotion/libero_bank_affiliate_program.jpg", AffiliatePromoter: "https://storage.googleapis.com/libero-cdn/public/promotion/affiliate_promoter_contest.jpg", RewardsContest: "https://storage.googleapis.com/libero-cdn/public/promotion/RewardsContest.jpg", linkdocument: "https://docs", faq: "FAQ's", discord: "Discord", telegram: "Telegram", home: "Home", services: "Services", contact: "Contact", "part1 text 1": "The Best Auto Staking + Defi 3.0 Multichain Farming Protocol", "part1 text 2": "Highest Fixed APY - 158,893.59%", "part1 text 3": "Automatic Staking and Compounding in Your Wallet!", "part1 text 4": "Get Rewards Every 30 Minutes / 48 Times Daily!", "part1 text 5": "Defi 3.0 Multichain Farming to support price floor.", "part1 text 6": "Rug-Proof: No minter code, Audited by THOREUM & RugFreeCoins", "buy FEFE": "Buy $FEFE", "white paper": "White Paper", "part2 text 1": "FEFE Autostaking Protocol", about: "ABOUT", "part2 text 2": "FEFE Finance is transforming DeFi with the FEFE Autostaking Protocol (LAP) that delivers the industry’s highest fixed APY, compounding rewards every 30 minutes, and a simple buy-hold-earn system that grows your portfolio in your wallet fast with fixed interest of 2.02% per day or 158,893.59% a year without you having to do anything.", "part2 text 3": "Fixed Staking APY", "open app": "Open App", "FEFE contract": "$FEFE Contract", "part3 text 1": "FEFE rewards holders with 2.02% daily interest, auto-compounding every 30 minutes, making 158,893.59% APY.", "part3 text 2": "Simply hold $FEFE and watch your 1,000 $FEFE become 1,588,935.90 $FEFE in a year. Backed by our innovative Treasury algorithm using automatic buyback & burn to support the price.", "Financial Freedom": "FEFE = Financial Freedom", "part3 text 3": "The protocol will use Defi 3.0 Multichain Farming to increase the Treasury exponentially at a rate of ~50% a year or more to better support FEFE price floor.", hiw: "How It Works", "part4 text 1a": "FEFE Insurance Treasury (LIT) Fund", "part4 text 1b": "Buy & Sell Fees", "part4 text 2a": "Defi 3.0 Multichain Farming", "part4 text 2b": "FEFE Treasury", "part4 text 3a": "Staking Rewards", "part4 text 3b": "FEFE Token", "part4 text 11": "A portion of the buy and sell fees help sustain the FEFE Treasury revenue. 5-10% of the trading volume is redirected to the Treasury, thus helping control the FEFE staking protocol distribution.", "part4 text 21": "Treasury inflow increases the FEFE Treasury balance and backs outstanding $FEFE tokens. The LIT funds are bridged to other EVM-compatible blockchains - like Avalanche, Fantom, Solana, Metis, Polygon, etc. to farm at the highest APY farms and the profit returned to the LIT fund. We aim to deliver ~50% additional returns a year or more to better support FEFE price floor. We are confident that we can support 50% higher APY than other high APY projects while still be sustainable.", "part4 text 31": "Compounds automatically with a treasury-backed currency with intrinsic value.", "Burn program": "Automatic Hyper Burn program", "part4 text 41": "The program starts with 1 billion $FEFE reserved exclusively for the burning purpose and will increase over time. In order not to be a pump and dump program we will perform the burn operations in a linear and automatic.", "part4 text 42": "Every week, 2-4% of the total supply will be burned. This percentage will evolve over the weeks.", "Prize-Linked": "Prize-Linked Accumulating Yield", "FEFE play": "FEFE P.L.A.Y.", "FEFE play detail": "FEFE P.L.A.Y. is the new FEFE LAP based project that allows FEFE token holders to generate even more rewards. Simple, Powerful and Proven.", "part5 text 1": "Your FEFE Tokens Give You Access to P.L.A.Y.", "part5 text 2": "Easy to Enter Easy to Play", "part5 text 3": "Multiple Big Winners Each Week", "part5 text 4": "No One Loses Their Initial Deposit", "part5 text 5": "Even if you don’t win, keep all of your money!", "Coming Soon": "Coming Soon", RFV: "RFV Fund", LIT_Detail: "5% of the buy and 10% of the sales fees are directed to the LIT fund which helps sustain and back the Staking Rewards provided by the Positive Rebase. LIT fund will be bridged to multichain farming to increase exponentially ~50% a year to further support price.", "FEFE Treasury": "Defi 3.0 Multichain Farming", "FEFE Treasury detail": "FEFE FEFE Insurance Treasury is stored in BUSD and only going up exponentially at ~50% per year by bridging multi-chain and farm at the best yield farms. The profit is used to further support FEFE price.", "Auto-Compounding Token": "Auto-Compounding Token", "Auto-Compounding Token detail": "Crypto’s first Auto-Staking and Auto-Compounding token with the highest Fixed APY 159,058.06%. It is backed by the Treasury", hmcie: "How much can I earn?", "hmcie detail": "Our products are powered by DeFi and are designed to help you effortlessly generate cash flow from your crypto.", "part6 text 1": "At the end of the year and with 1000 USD of $FEFE invested.", "part6 text 2a": "You can earn up to ", "part6 text 2b": " USD of $FEFE at ", "part6 text 2c": "% APY*.", "part6 text 3": "Earnings are calculated in a scenario where the Treasury sustains the rebase reward for 365 days.", "earn now": "Start Earning Now!", Tokenomics: "Tokenomics", "part7 text 1": "FEFE Tokenomics Explained", "part7 text 2": "$FEFE is a BEP-20 token with an elastic supply that rewards holders using a positive rebase formula.", "Automatic LP": "Automatic LP", "part7 text 3": "5% of the trading fees return to the liquidity ensuring $FEFE’s increasing collateral value.", Treasury: "Treasury", "part7 text 4": "3% of the purchases and 5% of the sales go directly to the treasury which supports the Treasury.", "Treasury Value": "Treasury Value", "part7 text 5": "5% of the buy and 10% of the sales fees are directed to the Treasury which helps sustain and back the Staking Rewards provided by the Positive Rebase.", "Find us on": "Find us on", "Talking about us": "Talking about us", "KEEP IN TOUCH": "KEEP IN TOUCH", Socials: "Socials", Products: "Products", Learn: "Learn", "Automatic-Staking": "Automatic-Staking", Documentation: "Documentation", Medium: "Medium", linkdoc: "https://docs.FEFE.financial/", linkapp: "https://app.libero.financial", linkfaq: "https://docs.libero.financial/guide/f.a.q.", linkcontact: "https://docs.libero.financial/connect-with-us/social-media", linkbuyfefe: "https://thoreum.capital/exchange/?outputCurrency=0x0DFCb45EAE071B3b846E220560Bbcdd958414d78", "Market Cap": "Market Cap", "FEFE Price": "FEFE Price", "Total Burned": "Total Burned", "BNB Liquidity Value": "BNB Liquidity Value", "Backed Liquidity": "Backed Liquidity", "Market Value Of Treasury Assets": "Marketing & Development Treasury", "Risk Free Value Fund": "Risk Free Value Fund", "Farming Profit": "Farming Profit", "Estimate your returns": "Estimate your returns", Amount: "Amount", "Starting Balance": "Starting Balance", Price: "Price", Days: "Days", "$FEFE Balance": "$FEFE Balance", "Total USD Balance": "Total USD Balance", "Automatic Hyper Burn": "Automatic Hyper Burn", "Total burned": "Total Burned", "Next burn amount": "Next burn amount", "Next burn": "Next burn", "Your share/marketcap will increase": "Your share/marketcap will increase", "after burning": "after burning", "Daily ROI": "Daily ROI", "Your Balance": "Your Balance", "Next Reward": "Next Reward", "Interest Coming In Your Wallet": "Interest Coming In Your Wallet", "Your Earnings/Daily": "Your Earnings/Daily",  "Your share/Marketcap": "Your share/Marketcap", "Your total earned": "Your total earned", "Track here": "Track here", "Next Reward Amount": "Next Reward Amount", "Next Reward Amount USD": "Next Reward Amount USD", "Next Reward Yield": "Next Reward Yield", "ROI (30-Day Rate)": "ROI (30-Day Rate)", Stake: "Stake", Earn: "Earn", "Total Rewards": "Total Rewards", Duration: "Duration", weeks: "weeks", "RFV Buyback Fund": "LIT Buyback Fund", "RFV Buyback Fund detail": "5% of the buy and 10% of the sales fees are directed to the LIT fund which helps sustain and back the Staking Rewards provided by the Positive Rebase. LIT fund will be bridged to multichain farming to increase exponentially ~50% a year to further support price.", Onboarding: "Onboarding", "World Highest Fixed APY": "World's Highest Fixed APY", "Staking and Compounding in Your Wallet!": "Staking and Compounding in Your Wallet!", Automatic: "Automatic", "Get Rewards": "Get Rewards", "Every 30 Minutes / 48 Times Daily!": "Every 30 Minutes / 48 Times Daily!", "Defi 3.0 Multichain Farming": "Defi 3.0 Multichain Farming", "Burning 2 - 4%": "Burning 2 - 4%", "to support high reward": "to support high reward", "supply every week.": "supply every week.", Audited: "Audited", "by THOREUM & RugFreeCoins,": "by THOREUM & RugFreeCoins,", "Rug-Proof: No minting to wallet,": "Rug-Proof: No minting to wallet,", "Auto slippage": "Auto slippage", "13% Slippage": "13% Slippage", "Max Sell / 1 transaction:": "Max Sell / 1 transaction:", "FEFE. Number of sell unlimited.": "FEFE. Number of sell unlimited.", "Key Elements of the FEFE Autostaking Protocol (LAP)": "Key Elements of the FEFE Autostaking Protocol (LAP)", "Hyper burn program": "Hyper burn program", "Hyper burn program detail": "With our Hyper burn program, 2-4% of total circulating supply is automatically burned every week, so FEFE's total supply will constantly be deflating against your balance, while your balance is constantly increasing against FEFE's total supply.", "Available Airdrop Treasure": "Available Airdrop Treasure", "Reward Amount Per Wallet": "Reward Amount Per Wallet", "You are not on the CoinMarketcap Airdrop 1000 winners list today.": "You are not on the CoinMarketcap Airdrop 1000 winners list today.", "Connect Wallet": "Connect Wallet", "Claim Your Reward": "Claim Your Reward", staking_p1: "🚀THOREUM MULTI BOOST POOL: STAKE $MVC EARN TRIPLE REWARDS: $FEFE (TWICE) 🎁 & $MVC 🎁", staking_p2: "ON FEB 10🔆", staking_p3: "AT 15:00 UTC🔆", staking_p4: "⚡️Stake $MVC", staking_p5: "🤑Earn $FEFE Farming Rewards", staking_p6: "🤑Earn $MVC Auto-Rewards", staking_p7: "🔆in a Single Pool.", staking_p8: "After harvest:", staking_p9: "🤑Earn $FEFE Rewards from holding $FEFE (Your $FEFE token amount grows 2.02% / day & compounding to 158,893.59% a year)", staking_p10: "⏰Start: 15:00 UTC, Feb 10", staking_p11: "🕰Duration: 30 days.", staking_p12: "🎁Fee: 0 deposit fee, 0 transfer fee, 0 withdrawal fee (not including BSC gas fee)", staking_p13: "⌛️Time lock: 0 day harvest lock, 0 days withdrawal lock", staking_p14: "Available on: 👉", staking_p15: "https://thoreum.capital/multi-boost", staking_p16: "IMPORTANT NOTICE", staking_p17: "Deposit limit is set to 100,000,000 MVC (~1,000 USD) per wallet in the first 7 days to keep high APR for all. After that, deposit amount is unlimited.", Dashboard: "Dashboard", Account: "Account", Staking: "Staking", Buybacks: "Buybacks", Swap: "Swap", "3 steps to financial freedom": "3 steps to financial freedom", "Farming Wallets": "Farming Wallets", "External Links": "External Links", hours: "hours", minutes: "minutes", seconds: "seconds", "Claim Airdrop": "Claim Airdrop", Max: "Max", "7 days": "7 days", "1 month": "1 month", "6 months": "6 months", "1 year": "1 year", "(by FEFE Leo, FEFE.financial lead dev)": "(by FEFE , FEFE.financial 's lead dev)", "Buy on Thoreum": "Buy on Thoreum", "Buy on PancakeSwap": "Buy on PancakeSwap", "PooCoin Chart": "PooCoin Chart", "DexTool Chart": "DexTool Chart", "Bogged Chart": "Bogged Chart", "Telegram Official Group": "Telegram Official Group", "Contract Address": "Contract Address", "CASHING OUT": "CASHING OUT", Document: "Document", "img compound interest": "https://storage.googleapis.com/libero-cdn/public/landing/libero-compound-interest.webp", "IMG 3 STEPS TO FINANCIAL FREEDOM": "https://storage.googleapis.com/libero-cdn/public/v1/3-steps.webp", stakingt_p1: "🚀#THOREUM MULTI BOOST POOL: STAKE $THOREUM EARN DOUBLE REWARDS: $FEFE (TWICE) 🎁", stakingt_p2: "ON FEB 17🔆", stakingt_p3: "AT 14:00 UTC🔆", stakingt_p4: "⚡️Stake $THOREUM", stakingt_p5: "🤑Earn $FEFE Farming Rewards", stakingt_p6: "After harvest:", stakingt_p7: "🤑Earn $FEFE Rewards from holding $FEFE (Your $FEFE token amount grows 2.04% / day & compounding to 158,893.59% a year)", stakingt_p8: "⏰Start: 14:00 UTC, Feb 17", stakingt_p9: "🕰Duration: 30 days.", stakingt_p10: "🎁Fee: 0 deposit fee, 0 transfer fee, 0 withdrawal fee (not including BSC gas fee)", stakingt_p11: "⌛️Time lock: 0 day harvest lock, 0 days withdrawal lock", stakingt_p12: "Available on:", stakingt_p13: "https://thoreum.capital/multi-boost", stakingt_p14: "IMPORTANT NOTICE", stakingt_p15: "Deposit limit is set to 1,000 THOREUM (~1,000 USD) per wallet in the first 7 days to keep high APR for all. After that, deposit amount is unlimited.", staking_p18: "How to buy $MVC?", staking_p19: "+Dextool (💸 Slippage 10%-12%)", staking_p20: "https://www.dextools.io/app/bsc/pair-explorer/0xf990309cd66d7a9729ffad6b687869beddadccbc", staking_p21: "+Thoreum Exchange: (auto slippage)", staking_p22: "https://thoreum.finance/exchange?outputCurrency=0x80d04E44955AA9c3F24041B2A824A20A88E735a8", staking_p23: "+Pancakeswap (💸 Slippage 11%)", staking_p24: "https://pancakeswap.finance/swap?outputCurrency=0x80d04E44955AA9c3F24041B2A824A20A88E735a8", staking_p25: "More info on", staking_p26: "https://mvc.finance/?utm_source=tele", staking_p27: "Link to your $MVC:", staking_p28: "https://mvc.finance/my-mvc/?utm_source=tele", stakingt_p16: "How to buy $THOREUM V2?", stakingt_p17: "+Thoreum Exchange: (auto slippage)", stakingt_p18: "https://thoreum.capital/exchange?outputCurrency=0xF2A92BC1Cf798fF4De14502a9C6FdA58865e8D5d", stakingt_p19: "+Dextool (💸 Slippage 13%)", stakingt_p20: "https://www.dextools.io/app/bsc/pair-explorer/0x77f791c9f6c84c263b1f212a0d3d7e1cd98546b0", stakingt_p21: "+Pancakeswap (💸 Slippage 13%)", stakingt_p22: "https://pancakeswap.finance/swap?outputCurrency=0xF2A92BC1Cf798fF4De14502a9C6FdA58865e8D5d", stakingt_p23: "More info on  🚀", stakingt_p24: "https://t.me/Thoreum", stakingt_p25: "Link to your $THOREUM:", stakingt_p26: "https://thoreum.capital/my-wallet", stakingt_p27: "Swap Thoreum v1 to Thoreum v2 at ratio 100:1 here 👉", stakingt_p28: "https://thoreum.capital/swap", stakinge_p1: "THOREUM MULTI BOOST POOL: STAKE $EPICHERO EARN TRIPLE REWARDS: $FEFE (TWICE) 🎁🎁 & $THOREUM 🎁", stakinge_p2: "ON FEB 28🔆", stakinge_p3: "AT 14:00 UTC🔆", stakinge_p4: "⚡️Stake $EPICHERO", stakinge_p5: "🤑Earn $FEFE Farming Rewards", stakinge_p6: "🤑Earn $THOREUM Auto-Rewards", stakinge_p7: "🔆in Single Pool", stakinge_p8: "🤑Earn $FEFE Rewards from holding $FEFE (Your $FEFE token amount grows 2.02% / day & compounding to 158,893.59% a year)", stakinge_p9: "Available on:", stakinge_p10: "https://thoreum.capital/multi-boost", stakinge_p11: "Buy EPICHERO here 👉", stakinge_p12: "https://thoreum.capital/exchange/?outputCurrency=0x47cC5334F65611EA6Be9e933C49485c88C17F5F0", stakinge_p13: "⏰Start: 14:00 UTC, Feb 28", stakinge_p14: "🕰Duration: 30 days", stakinge_p15: "🎁Fee: 0 deposit fee, 0 transfer fee, 0 withdrawal fee (not including BSC gas fee)", stakinge_p16: "⌛️Time lock: 0 day harvest lock, 0 days withdrawal lock", stakinge_p17: "Deposit limit is set to 28,000 EPICHERO (~2,000 USD) per wallet in the first 7 days to keep high APR for all. After that, deposit amount will be raised gradually everyweek", "Read more": "Read more", Reward: "Reward", Referral: "Referral", "Your Rewards": "Your Rewards", "Referral program": "Referral program", bank_p1: "What is FEFE BANK?", bank_p2: "- You lock FEFE (up to 4 years) in FEFE bank to receive xFEFE token as a receipt", bank_p3: "- The longer you lock the more xFEFE You will receive.", bank_p4: "- By just holding xFEFE, everyday you get BUSD reward from 7% FEFE volume, plus 1.01% FEFE interest (auto-compound to 4,000.00% APY for you).", bank_p5: "- xFEFE holders will receive other benefit such as multichain-farming profits in the future", bank_p6: "- xFEFE holders can vote in FEFE DAO governance for important factor such as transaction tax change...", bank_p7: "- You can unlock xFEFE before time but 90% of your locked FEFE will go to current xFEFE holders.", Lock: "Lock", bank_p9: "Total BUSD to be rewarded:", "FEFE locked": "FEFE locked", "xFEFE in circulation": "xFEFE in circulation", "Locking Chart": "Locking Chart", Balance: "Balance", "Lock until": "Lock until", "14 days - 4 years": "14 days - 4 years", Presets: "Presets", bank_p10: "- You need to lock a minimum amount of", bank_p11: "- You can lock maximum", bank_p12: "FEFE (Will change in few days)", bank_p13: "- Early unlock penalty fee is", "You xFEFE Balance": "You xFEFE Balance", "Total $BUSD Reward": "Total $BUSD Reward", "Pending $BUSD Reward": "Pending $BUSD Reward", "Claim Reward": "Claim Reward", "Compound $BUSD": "Compound $BUSD", Compound: "Compound", "You save buy tax when compound to tokens": "You save buy tax when compound to tokens", "Your total referral reward": "Your total referral reward", "Pending $FEFE reward": "Pending $FEFE reward", "Your referral link": "Your referral link", bank_p14: "1. Send your referral link to your friends", bank_p15: "2. When they claim their FEFE or BUSD rewards by holding xFEFE You will receive bonus", "Earning $FEFE by Levels": "Earning $FEFE by Levels", "Earning $BUSD by Levels": "Earning $BUSD by Levels", Promotion: "Promotion", "Congratulations !!!": "Congratulations !!!", "You are eligible to receive 1 free FEFE t-shirt. Get this discount code:": "You are eligible to receive 1 free FEFE t-shirt. Get this discount code:", "and proceed to order in our shop.": "and proceed to order in our shop.", "part1 text 7": "xFEFE Bank: Earn BUSD from 7% transaction volume &  participate in FEFE governance.", "part1 text 8": "FEFE is the pioneer in financial freedom and they are establishing a gold standard for passive income to change the whole Defi space.", "part1 text 9": "Global aggressive marketing campaigns are set to bring FEFE to billions of market cap, so the current $100 Million market cap has huge potential to explode.", bank_p16: "You will get back your locked amount after 69 days if you lock for 4 years.", "xFEFE in wallet": "xFEFE in wallet", "Early unlock penalty": "Early unlock penalty", Unlock: "Unlock", "Early unlock ?": "Early unlock ?", "Approve FEFE": "Approve FEFE", "Get More xFEFE": "Get More xFEFE", Submit: "Submit", "Your total referrals": "Your total referrals", users: "users", "Claim Referral Rewards": "Claim Referral Rewards", "You FEFE Locked": "You FEFE Locked", "Your shares / Total reward": "Your shares / Total reward", "(You will get back your locked amount after 69 days if you lock for 4 years)": "(You will get back your locked amount after 69 days if you lock for 4 years)", "Total $FEFE Reward": "Total $FEFE Reward", "Claim $FEFE": "Claim $FEFE", "Claim $BUSD": "Claim $BUSD", "Select token to compound:": "Select token to compound:", "Your shares / Total reward:": "Your shares / Total reward:", "Total $FEFE Rewarded": "Total $FEFE Rewarded", "Total $BUSD Rewarded": "Total $BUSD Rewarded", "Average lock time": "Average lock time", "FEFE BANK Affiliate Program": "FEFE BANK Affiliate Program", promotion1_t1: "Earn up to 10% commision in BUSD + 10% commision in FEFE with 5 Referral Bonus Levels", promotion1_t2: "Make every day payday! Share your referral link and get paid in BUSD and FEFE directly to your wallet!", promotion1_t3: "For every referred FEFE token which is locked in FEFE BANK, referrers will receive both:", promotion1_t4: "🤑10% bonus in BUSD with 5 Levels:", promotion1_t5: "1st Level Refer (your direct friend who use your referral link to buy and lock FEFE): 5%", promotion1_t6: "2nd Level Refer (referred friends of 1st Level Refer): 2.5%", promotion1_t7: "3rd Level Refer (referred friends of 2nd Level Refer): 1%", promotion1_t8: "4th Level Refer (referred friends of 3rd Level Refer): 1%", promotion1_t9: "5th Level Refer (referred friends of 4th Level Refer): 0.5%", promotion1_t10: "and", promotion1_t11: "🤑10% bonus in FEFE with 5 Levels", promotion1_t12: "1st Level Refer: 5%", promotion1_t13: "2nd Level Refer: 2.5%", promotion1_t14: "3rd Level Refer: 1%", promotion1_t15: "4th Level Refer: 1%", promotion1_t16: "5th Level Refer: 0.5%", promotion1_t17: "Important notices:", promotion1_t18: "1. The referrer is specified once at the time of the first FEFE lock and is assigned to the user without the possibility of changing. Every subsequent lock, the referrer will get his share.", promotion1_t19: "2. The user cannot use his referral code for himself.", promotion1_t20: "3. If the user does not have a valid referrer, the next time he locks FEFE will decide who his referrer is", promotion1_t21: "4. Your friends will not lose any thing when you get this commission, the commission comes from the system incentive pool.", promotion1_t22: "Invite successfully 1 friend and you can earn from 5 tiers of referral thanks to our 5-Level-Referral-Bonus", promotion1_t23: "A zero-risk way to make effortless passive income for lifetime, unlimited!", promotion1_t24: "Get your link at FEFE Bank", "FEFE-bank": "https://libero.financial/libero-bank", promotion1_t25: "and Share it now🚀", "FEFE BANK Affiliate Promoter Contest": "FEFE BANK Affiliate Promoter Contest", promotion2_t1: "🎁Prize Pool $3,000 USD And 10% Commission Rate - End Mar 31", promotion2_t2: "🤝How to invite friends to FEFE BANK", promotion2_t3: "1 Connect wallet at", promotion2_t4: ", copy your referral link and share it with your friends", promotion2_t5: "2 You will earn up to 10% commision in BUSD + 10% commision in FEFE with 5 Referral Bonus Levels", promotion2_t6: "🤝How to join FEFE BANK Affiliate Promoter Contest", promotion2_t7: "1 Screenshot your Your Referrals and referral Reward at", promotion2_t8: "3 Comment in this tweet (You can post a maximum 1 comment/day)", promotion2_t9: "🔹Photo of Your Referrals and referral Rewar", promotion2_t10: "🔹Say: How much your reward in USD is", promotion2_t11: "🔹Tag 5 personal friends", promotion2_t12: "4 Fill in this form", promotion2_t13: "https://docs.google.com/forms/u/0/d/1tmlsUHhnhYe2Zk2M-FrWe6hhu9At8P16NnrsP1IJwCE/viewform?edit_requested=true", promotion2_t14: "🎊Prizes", promotion2_t15: "🎁Top 3 promoters with the highest total referral reward win", promotion2_t16: "Top 1: $1000 USD in $FEFE", promotion2_t17: "Top 2: $600 USD in $FEFE", promotion2_t18: "Top 3: $400 USD in $FEFE", promotion2_t19: "🎁5 random winners get $200 USD in $FEFE each", promotion2_t20: "⏰Promotion period: Mar 06 to Mar 31 11:59 PM (UTC)", "FEFE BANK Show your Rewards Contest": "FEFE BANK Show your Rewards Contest", promotion3_t1: "🎁10 random winners get $50 USD in $FEFE each - End: Mar 11", promotion3_t2: "1 Screenshot your Total Z an $BUSD Reward at", promotion3_t3: "2 Comment in this tweet", promotion3_t4: "https://twitter.com/", promotion3_t5: "🔹Photo of Your total reward", promotion3_t6: "🔹Say:", promotion3_t7: "+ You FEFE Locked in USD", promotion3_t8: "+ Lock time", promotion3_t9: "+ Total rewards (FEFE + BUSD) in USD", promotion3_t10: "+ in… (hours, days)", promotion3_t11: "Exp: I locked 100,000 FEFE ~$487.05 for 4 years, total rewards $36.97 USD in 11 hours", promotion3_t12: "/promotion/rewardscontest_img1.png", promotion3_t13: "🔹Tag 5 personal friends", promotion3_t14: "3 Fill this form", promotion3_t15: "https://docs.google.com/forms/d/1Rzxm3Rzuov08V72F2E1PLrvUYoLp6bTj_BtXeNYoQWc/edit", promotion3_t16: "End: 23:59 UTC, Mar 11. LET'S GO!", promotion3_t17: "*🎁The contest lasts for 7 days. Which means you can enter 7 times (1 per day)", promotion3_t18: "Rules:", "$100k Airdrop to xFEFE holders": "$100k Airdrop to xFEFE holders", promotion4_t1: "$100K BUSD will be airdropped to xFEFE holders on Mar 13th when FEFE Times Square Billboard goes", promotion4_t2: "Airdrop: 14:00 UTC Mar 13 2022", promotion4_t3: "To celebrate FEFE Times Square Billboard and the successful launch of FEFE BANK, we will airdrop $100,000 BUSD from the $581,277.82 total BUSD reward fund to xFEFE holders!", promotion4_t4: "How much will I receive?", promotion4_t5: "It depends on your percentage per total $FEFE locked.", promotion4_t6: "For example: if your share/total rewards is 3.01% when the airdrop happens, you will receive $3010 BUSD.", promotion4_t7: "The airdrop BUSD will go directly to your claimable BUSD in FEFE bank, you can choose between claiming to BUSD or compounding to $FEFE / $THOREUM / $MVC / $EPICHERO without paying buy tax 🔥", promotion4_t8: "How can I qualify for this massive $100,000 BUSD reward?", promotion4_t9: "All xFEFE holders before 14:00 UTC Mar 13 are qualified! Buy $FEFE and lock it in FEFE BANK, you will become xFEFE holders", promotion4_t10: "When airdrop?", promotion4_t11: "14:00 UTC Mar 13 2022", promotion4_t12: "Financial freedom or work till you die? Let your money work for you in FEFE BANK now", "With FEFE, when Lambo?": "With FEFE, when Lambo?", promotion5_t1: "Prize pool: $3000 - End: Mar 18", promotion5_t2: "With FEFE's 158,893.59% Fixed APY, your money grows while you sleep 😴", promotion5_t3: "Just by holding $FEFE in your wallet, your $1000 becomes 🚘Lambo ($200,000) in how many days?", promotion5_t4: "Make a guess for a chance to win!", promotion5_t5: '💵3 lucky winners will each receive a "seed" of $1000 worth in $FEFE to grow their Lambo dream!', promotion5_t6: "Celebrating FEFE at Times Square Mar 13-19🎊", promotion5_t7: "🗽In New York, home of the Statue of Liberty!", promotion5_t8: "🗽Right on Times Tower (Mar 13), icon of New York, also where Doge had their banner", promotion5_t9: "Let's spread FEFE's great news for financial freedom", promotion5_t10: "To participate:", promotion5_t11: "1 Retweet", promotion5_t12: "https://twitter.com/FEFEFinancial/status/1501247761244590084?s=20&t=2J_qJ8PXKBf_PCV74lQUOA", promotion5_t13: "2 Follow", promotion5_t14: "https://twitter.com/", promotion5_t15: "3 Comment on tweet:", promotion5_t16: "🔸your guess", promotion5_t17: "Eg: Just by holding $FEFE in your wallet", promotion5_t18: "Your $1000 becomes Lambo ($200,000) in 100 days", promotion5_t19: "🔸hashtag #FinancialFreedom, #Lambo & $FEFE #TimesSquare", promotion5_t20: "🔸tag 5 friends", promotion5_t21: "4 Fill in", promotion5_t22: "https://bit.ly/3pJGoTG", promotion5_t23: "Contest period: Mar 08 to Mar 18 11:59 PM (UTC)", promotion5_t24: "The correct answer will appear on FEFE's billboard at Time Square (1540 Broadway) on the last day of the 1 week ad campaign (Mar 19), let’s find out!", promotion5_t25: "Hint - How your $1000 grows by the months with 158,893% Fixed APY (not to mention 7% BUSD passive income): in table attached!", promotion5_t26: "/promotion/1000$grows.jpg", "Current Offers and Promotions": "Current Offers and Promotions", "FEFE Bank": "FEFE Bank", "by THOREUM & RugFreeCoins, audited by ": "by THOREUM & RugFreeCoins, audited by ", "FEFE IS TAKING OVER NEW YORK TIMES SQUARE!": "FEFE IS TAKING OVER NEW YORK TIMES SQUARE!", "We are right now live at New York Times Square, on the Times Tower - the icon of New York City,  also where Doge had their banner advertised!": "We are right now live at New York Times Square, on the Times Tower - the icon of New York City,  also where Doge had their banner advertised!", "$FEFE price has been pumping for 8 days straight, going to hit a new ATH and beyond 🚀": "$FEFE price has been pumping for 8 days straight, going to hit a new ATH and beyond 🚀", "Get on this bullet train now before its too late": "Get on this bullet train now before its too late", "https://thoreum.capital/exchange/?outputCurrency=0x0DFCb45EAE071B3b846E220560Bbcdd958414d78": "https://thoreum.capital/exchange/?outputCurrency=0x0DFCb45EAE071B3b846E220560Bbcdd958414d78", "Watch FEFE on the Times Tower here": "Watch FEFE on the Times Tower here", "https://www.earthcam.com/cams/newyork/timessquare/?cam=tstwo_hd2": "https://www.earthcam.com/cams/newyork/timessquare/?cam=tstwo_hd2", "About FEFE:": "About FEFE:", NewsYorkTimesSquare_p1: "Make Your #FinancialFreedom Wish at FEFE Times Square Billboard - 3 Will Come True!", NewsYorkTimesSquare_p2: "Prize pool: $6600 USD", NewsYorkTimesSquare_p3: "FEFE IS TAKING OVER NEW YORK TIMES SQUARE!", FinancialFreedomWish_p1: "Do you know that FEFE's billboard is right now live at New York Times Square, on the Times Tower? This is where people come and make a wish for new year, also where Doge had their banner advertised?", NewsYorkTimesSquare_p4: "This is not just a billboard", NewsYorkTimesSquare_p5: "This is an icon of New York City", NewsYorkTimesSquare_p6: "How to make your wish with FEFE:", NewsYorkTimesSquare_p7: "1 Retweet", NewsYorkTimesSquare_p8: "2 Follow", NewsYorkTimesSquare_p9: "Comment on this tweet", NewsYorkTimesSquare_p10: "🔸your wish", NewsYorkTimesSquare_p11: "🔸Photo or video of FEFE Times Tower Billboard.", NewsYorkTimesSquare_p12: "🔸Hashtags #FinancialFreedom #FEFE #TimesSquare #Passiveincome", NewsYorkTimesSquare_p13: "🔸tag 5 friends", NewsYorkTimesSquare_p14: "4 Fill in this form", NewsYorkTimesSquare_p15: "🎁Each winner will be eligible to receive up to $2,000 in FEFE to be used toward granting your specified wish. Bonus points for creativity!", NewsYorkTimesSquare_p16: "🎁The 3 best original videos will receive $200 in FEFE each", NewsYorkTimesSquare_p17: "Promotion period: Mar 13 to Mar 31 11:59 PM (UTC)", NewsYorkTimesSquare_p18: "TAKING OVER NEW YORK TIMES SQUARE!", discordlink: "https://discord.gg/zYGz76TsDS", "fefe usdt 1": "🔔 #FEFE Farm, Snack Pool, and Trade Mining are live now!", "fefe usdt 2": "👶🏻 Stake FEFE-USDT earn $BABY", "fefe usdt 3": "👶🏻 Trade FEFE-USDT earn $BABY", "fefe usdt 4": "👶🏻 Stake BABY earn $FEFE", "fefe usdt 5": "👉 Join now for high APR:", "fefe usdt 6": "https://home.babyswap.finance/farms", "fefe usdt 7": "You can add FEFE-USDT liquidity now on BabySwap:", "fefe usdt 8": "https://exchange.babyswap.finance/#/add/0x0DFCb45EAE071B3b846E220560Bbcdd958414d78/0x55d398326f99059fF775485246999027B3197955", "fefe usdt 9": "✨🗽Your tokens still grow & are auto-compounded inside the FEFE-USDT LP", "staking POOL FARM ENDED": "POOL/FARM ENDED", "staking POOL FARM ENDED p1": "⚡️Stake MVC earn FEFE", "staking POOL FARM ENDED p2": "Please click “Exit” to unstake your $MVC & collect your $FEFE at the same time.", "staking POOL FARM ENDED p3": "https://thoreum.capital/multi-boost", "staking POOL FARM ENDED p4": "(Inactive tab)", "KnightSwap 1": "🗡 KNIGHTSWAP X FEFE🗽 FARM IS NOW LIVE", "KnightSwap 2": "🔥Highest fixed APY at 158,893.59%", "KnightSwap 3": "🔥Highest stable coin BUSD APR at 226%", "KnightSwap 4": "🎁$20K worth of $KNIGHT will be airdrop for FEFE Bank stakers at the end of this staking period!🎁", "KnightSwap 5": "💲💲💲💲💲💲💲💲💲💲", "KnightSwap 6": "🏪 Buy $FEFE", "KnightSwap 7": "https://dex.knightswap.financial/#/swap/0x0DFCb45EAE071B3b846E220560Bbcdd958414d78", "KnightSwap 8": "👨‍🌾 Farm $KNIGHT", "KnightSwap 9": "https://app.knightswap.financial/farms", "KnightSwap 10": "✨🗽Your tokens still grow & are auto-compounded inside the FEFE-BNB LP", "KnightSwap 11": "🗡 Raid $FEFE", "KnightSwap 12": "https://app.knightswap.financial/raid", "KnightSwap 13": "📚 Walkthrough", "KnightSwap 14": "https://medium.com/knight-bsc-dark-knight-ftm/", "15% Slippage": "15% Buy fee ~ 18% Slippage", "FEFE (this number will be increased gradually and finally to unlimited)": "FEFE (this number will be increased gradually and finally to unlimited)", "lockingform 1": "- You lock FEFE (any period from 1 day to 4 years) in the FEFE Bank to receive xFEFE token as a receipt.", "lockingform 2": "(Proportionally, the longer you lock, the more xFEFE You will receive. A 4 year lock will give a 1:1 ratio of FEFE to xFEFE conversion.)", "lockingform 3": "- By just holding xFEFE, everyday you get BUSD reward from 7% FEFE trading volume, plus 1.05% FEFE interest (auto-compound to 4,659.17% APY for you). You will get back your locked amount after 66 days if you lock for 4 years.", "lockingform 4": "1 FEFE locked for 4 years = 1.00 xFEFE", "lockingform 5": "1 FEFE locked for 3 years = 0.75 xFEFE", "lockingform 6": "1 FEFE locked for 2 years = 0.50 xFEFE", "lockingform 7": "1 FEFE locked for 1 years = 0.25 xFEFE", "lockingform 8": "Cannot extend lock to more than 4 years", "lockingform 9": "You can only increase 14 - 1460 days", "lockingform 10": "(You will get back 100% your locked FEFE amount after 66 days if you lock for 4 years)", "lockingform 11": "These numbers are based on real-time data:", "lockingform 12": "1. xFEFE APY will increase if more xFEFE is locked", "lockingform 13": "2. BUSD APR will change based on Daily volume, FEFE price and Number of xFEFE locked.", "lockingform 14": "(Autocompound every 30 mins)", "Smart Bond 1": "FEFE Smart Bond", "Smart Bond 2": "Expand the treasury and build protocol-owned liquidity", "Smart Bond 3": "Bonding allows users to buy FEFE from the treasury at a discount to market price.", "Smart Bond 4": "How does FEFE Smart Bond work?", "Smart Bond 5": "For users:", "Smart Bond 6": "Users come to FEFE Smart Bond section on the website and check if there is a discounted bond.", "Smart Bond 7": "Not that every time there is a discounted bond available, if someone already bought all the discounted bond, there will be no discounted bond left. Or when the project decide that not to sell bond, there'll be no discounted bond available.", "Smart Bond 8": "If there is bond available, usually with a discount, users can buy FEFE with a discounted price, for example 10%. So they pay 10% less WBNB ( or BUSD, or FEFE-BNB LP or whatever the protocol choose) compare to what they have to pay on normal exchanges.", "Smart Bond 9": "Users can claim their FEFE right after purchase or a few days later (usually 5 days)  depend on the setting of the protocol.", "Smart Bond 10": "80% of the purchased money will go to normal exchange to market buy, help increase the price and market cap.", "Smart Bond 11": "20% of the purchased money will go to the treasury of the protocol, make the protocol more sustainable.", "Smart Bond 12": "The 80/20 ratio can be configured by the protocols at any time depends on market situation.", "Smart Bond 13": "For partnered protocols:", "Smart Bond 14": "FEFE offer this service to any partners with 2% fee based on the volume. Using our smart contracts, the DAO’s or protocol’s treasury will be able to offer their token for a discount in exchange for a liquidity pair, or any other token they choose ( WBNB, BUSD, LPs, etc.).", "Smart Bond 15": "With the \"Smart\" feature of FEFE Smart Bond, for the first time ever in Defi world, protocols's price and marketcap can grow together with its treasury. Both long term sustainability and short term price action is boosted through FEFE's innovative Smart Bond Service.", "Smart Bond 16": "Users can create LPs or use existing ones to exchange those for discounted tokens, which could be directly put into an address of the protocols choosing. This further incentivizes users to stick around to profit from the protocol’s revenues.", "Smart Bond 17": "Users avoid the risk of impermanent loss by not keeping the liquidity (eg. FEFE-BNB) themself, they give it to the protocol in exchange for a discounted price.", "Smart Bond 18": "Protocols/DAOs do not have to pay the Liquidity Mining incentive for users to keep their liquidity.", "Smart Bond 19": "Protocols/DAOs can earn on liquidity trading fees. ", "Smart Bond 20": "Protocols/DAOs can own their liquidity, not dependent on mercenary liquidity providers anymore", "Smart Bond 21": "Protocols/DAOs now own their liquidity, so price is more stable and volume will increase and better absorbs large trade.", "Smart Bond 22": "The liquidity is bigger over time and has no risk of user withdrawal.", "Smart Bond 23": "Bonding can be implemented on your own website.", "Smart Bond 24": "With FEFE Smart Bond - Bonding as a Service, the road to self-sustainability and long-term growth is ready for any DAO/protocols that want to partner with us.", "Smart Bond 25": "Read more on document", "Smart Bond 26": "What is FEFE Smart Bond?", "Total Buybacks": "Total Buybacks", "No. of Buyback & Burn": "No. of Buyback & Burn", "Your FEFE referral reward": "Your FEFE referral reward", "Your BUSD referral reward": "Your BUSD referral reward", "WFEFE 1": "Wrapped Yield Bearing Token by FEFE Financial", "WFEFE 2": "FEFE will pioneer fixed APY tokens with a wrapped yield bearing version of its native token. ", "WFEFE 3": "🔥Why do we need wFEFE?", "WFEFE 4": "For getting listed on CEX (centralized exchange) and joining yield farming protocols . Once you have FEFE in your wallet, rebases happen every 30 minutes, and your FEFE amount will increase a 2.04% a day. You can't bring it on a Centralized Exchange like Binance because once you deposit on CEX, the amount of your token stops increasing. And the CEX cannot handle the rebase every 30 minutes for you.", "WFEFE 5": "You also can’t stake it in yield farming protocols because of the automated rebases. The amount of tokens when you withdraw is larger than the amount you staked because of rebases, and that’s something that no farm currently supports. That led to most farming protocols not providing pools for rebase tokens.", "WFEFE 6": "🔥How wFEFE can be listed on CEX and participate in yield farming protocols?", "WFEFE 7": "We will solve this problem by wrapping FEFE in a new token called wFEFE. With our breakthrough technology, your FEFE can still grow 2.04% a day or 158,900.00% a year inside wFEFE. You can wrap FEFE into wFEFE and bring wFEFE on any farms or transfer to any Centralized exchange. While the amount of wFEFE stays the same, the number of FEFE inside it continues to grow. And at any time you can get all the original FEFE plus the rewarded FEFE from rebases by unwrapping wFEFE.", "WFEFE 8": "With wFEFE we can bring FEFE on any CEX like Gate.io, Binance, etc. where millions of new holders can get their hands on our tokens. We will form partnerships with a number of big CEXs and we will see FEFE grow exponentially in terms of brand and holders.", "WFEFE 9": "This will be the next leap forward of FEFE and we will see it in action in April.", "FEFE Insurance Treasury": "FEFE Insurance Treasury", "part1 text 10": "Earn 225% BUSD APR - highest on all markets & participate in FEFE governance.", "part1 text 11": "World’s first Defi 3.0 bonding mechanism that grow treasury & marketcap together", "(Will be used when unlock to FEFE)": "(Will be used when unlock to FEFE)" }    },
    a53d: function(t) { t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"autoRebase","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"automatedMarketMakerPairs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"busdToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyFeeRFV","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"checkFeeExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkSwapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"}],"name":"clearStuckBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feesOnNormalTransfers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCirculatingSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"accuracy","type":"uint256"}],"name":"getLiquidityBacking","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialDistributionFinished","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isLiquidityInBnb","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"target","type":"uint256"},{"internalType":"uint256","name":"accuracy","type":"uint256"}],"name":"isOverLiquified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityReceiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manualSync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxSellTransactionAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextRebase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebaseFrequency","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardYield","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardYieldDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"riskFreeValueReceiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"contract IDEXRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sellFeeRFVAdded","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sellFeeTreasuryAdded","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBuyFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSellFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasuryReceiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]') },
    ae0a: function(t) { t.exports = JSON.parse('[{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}]') },
    c5e4: function(t) { t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"accumulativeDividendOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"account","type":"address"}],"name":"claimDividend","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"account","type":"address"},{"internalType":"address","name":"wantToken","type":"address"}],"name":"compoundDividend","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"dividendOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dividendToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfTokenHolders","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumTokenBalanceForDividends","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDividendsDistributed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"withdrawableDividendOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"withdrawnDividendOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xLiberoAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]') },
    eb99: function(t) { t.exports = JSON.parse('[{"inputs":[],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_purchaser","type":"address"}],"name":"getWhitelistedZone","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"isClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isWhitelistEnable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isWhitelistStarted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_purchaser","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_purchaser","type":"address"},{"internalType":"uint8","name":"_zone","type":"uint8"}],"name":"joinWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]') }
});